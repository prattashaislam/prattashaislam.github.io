fib <- function(n) {
numbers = vector()
numbers[1]=0
numbers[2]=1
for(i in 3:n) {
numbers[i]=numbers[i-1]+numbers[i-2]
}
return(n)
}
a <- fib(14)
a
fib <- function(n) {
numbers = vector()
numbers[1]=0
numbers[2]=1
for(i in 3:n) {
numbers[i]=numbers[i-1]+numbers[i-2]
}
return(numbers[n])
}
a <- fib(14)
a
b <- fib(2)
b
b <- fib(1)
b
library(mosaic)
plotFun(3 * (Aˆ0.4) * (Bˆ0.6) ~ K & L, filled = FALSE,
xlim = range(0, 41), ylim = range(0, 400))
plotFun(3 * (Aˆ0.4) * (Bˆ0.6) ~ A & B, filled = FALSE,
xlim = range(0, 41), ylim = range(0, 400))
library(mosaic)
plotFun(A * (aˆ0.4) * (bˆ0.6) ~ a & b, A = 3, filled = FALSE,
xlim = range(0, 41), ylim = range(0, 400))
library(mosaic)
plotFun(3 * (A^0.4) * (B^0.6) ~ A & B,
filled = FALSE,
xlim = range(0, 41), ylim = range(0, 400))
library(mosaic)
plotFun(3 * (A^0.4) * (B^0.6) ~ A & B,
filled = FALSE,
xlim = range(0, 40), ylim = range(0, 400))
library(mosaic)
library(manipulate)
plotFun(3 * (A^0.4) * (B^0.6)~A&B,
filled = FALSE,
xlim = range(0, 40),
ylim = range(0, 400),
surface=TRUE)
par(family="sans")
plot(iris, pch=20, cex=.75, col="steelblue"
)
setwd("C:/Users/pratt/OneDrive - The University of Texas at Dallas/Data Visualization/prattashaislam.github.io")
setwd("C:/Users/pratt/OneDrive - The University of Texas at Dallas/Data Visualization/prattashaislam.github.io/_site")
## Anscombe (1973) Quartlet
data(anscombe)  # Load Anscombe's data
View(anscombe) # View the data
summary(anscombe)
## Simple version
plot(anscombe$x1,anscombe$y1)
summary(anscombe)
# Create four model objects
lm1 <- lm(y1 ~ x1, data=anscombe)
summary(lm1)
lm2 <- lm(y2 ~ x2, data=anscombe)
summary(lm2)
lm3 <- lm(y3 ~ x3, data=anscombe)
summary(lm3)
lm4 <- lm(y4 ~ x4, data=anscombe)
summary(lm4)
plot(anscombe$x1,anscombe$y1)
abline(coefficients(lm1))
plot(anscombe$x2,anscombe$y2)
abline(coefficients(lm2))
plot(anscombe$x3,anscombe$y3)
abline(coefficients(lm3))
plot(anscombe$x4,anscombe$y4)
abline(coefficients(lm4))
#| layout-ncol: 2
#| layout-nrow: 2
## Anscombe (1973) Quartlet
data(anscombe)  # Load Anscombe's data
View(anscombe) # View the data
summary(anscombe)
## Simple version
plot(anscombe$x1,anscombe$y1)
summary(anscombe)
## Anscombe (1973) Quartlet
data(anscombe)  # Load Anscombe's data
View(anscombe) # View the data
summary(anscombe)
## Simple version
plot(anscombe$x1,anscombe$y1)
summary(anscombe)
# Create four model objects
lm1 <- lm(y1 ~ x1, data=anscombe)
summary(lm1)
lm2 <- lm(y2 ~ x2, data=anscombe)
summary(lm2)
lm3 <- lm(y3 ~ x3, data=anscombe)
summary(lm3)
lm4 <- lm(y4 ~ x4, data=anscombe)
summary(lm4)
plot(anscombe$x1,anscombe$y1)
abline(coefficients(lm1))
plot(anscombe$x2,anscombe$y2)
abline(coefficients(lm2))
plot(anscombe$x3,anscombe$y3)
abline(coefficients(lm3))
plot(anscombe$x4,anscombe$y4)
abline(coefficients(lm4))
par(mfrow = c(2, 3))
plot(1:10)                        # 1st plot
plot(1:5)                         # 2nd plot
plot(10:1)                        # 3rd plot
plot(1)                           # 4th plot
plot(1:3)                         # 5th plot
plot(5:1)                         # 6th plot
dev.off()
par(mfrow = c(2, 3))
plot(1:10)                        # 1st plot
plot(1:5)                         # 2nd plot
plot(10:1)                        # 3rd plot
plot(1)                           # 4th plot
plot(1:3)                         # 5th plot
plot(5:1)                         # 6th plot
par(mar = c(5, 5, 10, 20))
par(mfrow = c(2, 3))
plot(1:10)                        # 1st plot
plot(1:5)                         # 2nd plot
plot(10:1)                        # 3rd plot
plot(1)                           # 4th plot
plot(1:3)                         # 5th plot
plot(5:1)                         # 6th plot
par(mar = c(5, 5, 10, 20))
par(mfrow = c(2, 3))
plot(1:10)                        # 1st plot
plot(1:5)                         # 2nd plot
plot(10:1)                        # 3rd plot
plot(1)                           # 4th plot
plot(1:3)                         # 5th plot
plot(5:1)                         # 6th plot
par(bg = "powderblue")
par(mfrow = c(2, 3))
par(bg = "yellow")
plot(1:10)                        # 1st plot
plot(1:5)                         # 2nd plot
plot(10:1)                        # 3rd plot
plot(1)                           # 4th plot
plot(1:3)                         # 5th plot
plot(5:1)                         # 6th plot
par(mfrow = c(2, 3))
par(bg = "powderblue")
plot(1:10)                        # 1st plot
plot(1:5)                         # 2nd plot
plot(10:1)                        # 3rd plot
plot(1)                           # 4th plot
plot(1:3)                         # 5th plot
plot(5:1)                         # 6th plot
par(mfrow = c(2, 2))
par(bg = "powderblue")
plot(anscombe$x1,anscombe$y1)
abline(coefficients(lm1))
plot(anscombe$x2,anscombe$y2)
abline(coefficients(lm2))
plot(anscombe$x3,anscombe$y3)
abline(coefficients(lm3))
plot(anscombe$x4,anscombe$y4)
abline(coefficients(lm4))
par(mfrow = c(2, 2))
par(bg = "powderblue")
par(mar = c(5, 5, 10, 20))
plot(anscombe$x1,anscombe$y1)
par(mfrow = c(2, 2))
par(bg = "powderblue")
plot(anscombe$x1,anscombe$y1)
abline(coefficients(lm1))
plot(anscombe$x2,anscombe$y2)
abline(coefficients(lm2))
plot(anscombe$x3,anscombe$y3)
abline(coefficients(lm3))
plot(anscombe$x4,anscombe$y4)
abline(coefficients(lm4))
plot(density(x1))
plot(density(anscombe$x1))
lines(density(anscombe$y1), col = "red")
plot(density(anscombe$x1))
lines(density(anscombe$y1), col = "red")
lines(density(anscombe$x2), col = "blue")
lines(density(anscombe$y2), col = "green")
plot(density(anscombe$x1))
lines(density(anscombe$y1), col = "red")
plot(anscombe$x1, anscombe$y1, type = "l")
lines(anscombe$x1, anscombe$y2, type = "l", col = "red")
lines(anscombe$x1, anscombe$y3, type = "l", col = "blue")
lines(anscombe$x1, anscombe$y4, type = "l", col = "green")
plot(anscombe$x1, anscombe$y1, type = "b", pch = 16)
lines(anscombe$x1, anscombe$y2, type = "b", pch = 15, col = "red")
lines(anscombe$x1, anscombe$y3, type = "b", pch = 8,  col = "blue")
lines(anscombe$x1, anscombe$y4, type = "b", pch = 10, col = "green")
plot(anscombe$x1, anscombe$y1, type = "b", pch = 16)
lines(anscombe$x1, anscombe$y2, type = "b", pch = 15, col = "red")
lines(anscombe$x1, anscombe$y3, type = "b", pch = 10,  col = "blue")
lines(anscombe$x1, anscombe$y4, type = "b", pch = 8, col = "pink")
legend("topleft",
legend = c("Line y1", "Line y2", "Line y3", "Line y4"),
col = c("black", "red", "blue", "pink"),
pch = c(16, 15, 10, 8))
plot(anscombe$x1, anscombe$y1, type = "b", pch = 16)
lines(anscombe$x1, anscombe$y2, type = "b", pch = 15, col = "red")
lines(anscombe$x1, anscombe$y3, type = "b", pch = 10,  col = "blue")
lines(anscombe$x1, anscombe$y4, type = "b", pch = 8, col = "orange")
legend("topleft",
legend = c("Line y1", "Line y2", "Line y3", "Line y4"),
col = c("black", "red", "blue", "orange"),
pch = c(16, 15, 10, 8))
plot(anscombe$x1, anscombe$y1, type = "b", pch = 16, lwd = 10)
lines(anscombe$x1, anscombe$y2, type = "b", pch = 15, col = "red")
lines(anscombe$x1, anscombe$y3, type = "b", pch = 10,  col = "blue")
lines(anscombe$x1, anscombe$y4, type = "b", pch = 8, col = "orange")
legend("topleft",
legend = c("Line y1", "Line y2", "Line y3", "Line y4"),
col = c("black", "red", "blue", "orange"),
pch = c(16, 15, 10, 8))
plot(anscombe$x1, anscombe$y1, type = "b", pch = 16, lwd = 2)
lines(anscombe$x1, anscombe$y2, type = "b", pch = 15, col = "red")
lines(anscombe$x1, anscombe$y3, type = "b", pch = 10,  col = "blue")
lines(anscombe$x1, anscombe$y4, type = "b", pch = 8, col = "orange")
legend("topleft",
legend = c("Line y1", "Line y2", "Line y3", "Line y4"),
col = c("black", "red", "blue", "orange"),
pch = c(16, 15, 10, 8))
plot(anscombe$x1, anscombe$y1, type = "b", pch = 16, lwd = 4)
lines(anscombe$x1, anscombe$y2, type = "b", pch = 15, col = "red")
lines(anscombe$x1, anscombe$y3, type = "b", pch = 10,  col = "blue")
lines(anscombe$x1, anscombe$y4, type = "b", pch = 8, col = "orange")
legend("topleft",
legend = c("Line y1", "Line y2", "Line y3", "Line y4"),
col = c("black", "red", "blue", "orange"),
pch = c(16, 15, 10, 8))
plot(anscombe$x1, anscombe$y1, type = "b", pch = 16, lwd = 4)
lines(anscombe$x1, anscombe$y2, type = "b", pch = 15, col = "red", lwd = 4)
lines(anscombe$x1, anscombe$y3, type = "b", pch = 10,  col = "blue", lwd = 4)
lines(anscombe$x1, anscombe$y4, type = "b", pch = 8, col = "orange", lwd = 4)
legend("topleft",
legend = c("Line y1", "Line y2", "Line y3", "Line y4"),
col = c("black", "red", "blue", "orange"),
pch = c(16, 15, 10, 8))
plot(anscombe$x1, anscombe$y1, type = "b", pch = 16, lwd = 4)
lines(anscombe$x1, anscombe$y2, type = "b", pch = 15, col = "red", lwd = 4)
lines(anscombe$x1, anscombe$y3, type = "b", pch = 10,  col = "blue", lwd = 4)
lines(anscombe$x1, anscombe$y4, type = "b", pch = 8, col = "orange", lwd = 4)
legend("topleft",
legend = c("Line y1", "Line y2", "Line y3", "Line y4"),
col = c("black", "red", "blue", "orange"),
pch = c(16, 15, 10, 8))
plot(anscombe$x1, anscombe$y1, type = "b", pch = 16, cex = 2, lwd = 4)
lines(anscombe$x1, anscombe$y2, type = "b", pch = 15, cex = 2, col = "red", lwd = 4)
lines(anscombe$x1, anscombe$y3, type = "b", pch = 10, cex = 2,  col = "blue", lwd = 4)
lines(anscombe$x1, anscombe$y4, type = "b", pch = 8, cex = 2, col = "orange", lwd = 4)
legend("topleft",
legend = c("Line y1", "Line y2", "Line y3", "Line y4"),
col = c("black", "red", "blue", "orange"),
pch = c(16, 15, 10, 8))
plot(anscombe$x1, anscombe$y1, type = "b", pch = 16, cex = 4, lwd = 4)
lines(anscombe$x1, anscombe$y2, type = "b", pch = 15, cex = 2, col = "red", lwd = 4)
lines(anscombe$x1, anscombe$y3, type = "b", pch = 10, cex = 2,  col = "blue", lwd = 4)
lines(anscombe$x1, anscombe$y4, type = "b", pch = 8, cex = 2, col = "orange", lwd = 4)
legend("topleft",
legend = c("Line y1", "Line y2", "Line y3", "Line y4"),
col = c("black", "red", "blue", "orange"),
pch = c(16, 15, 10, 8))
plot(anscombe$x1, anscombe$y1, type = "b", pch = 16, cex = 0.5, lwd = 4)
lines(anscombe$x1, anscombe$y2, type = "b", pch = 15, cex = 2, col = "red", lwd = 4)
lines(anscombe$x1, anscombe$y3, type = "b", pch = 10, cex = 2,  col = "blue", lwd = 4)
lines(anscombe$x1, anscombe$y4, type = "b", pch = 8, cex = 2, col = "orange", lwd = 4)
legend("topleft",
legend = c("Line y1", "Line y2", "Line y3", "Line y4"),
col = c("black", "red", "blue", "orange"),
pch = c(16, 15, 10, 8))
plot(anscombe$x1, anscombe$y1, type = "b", pch = 16, cex = 0.5, lwd = 4)
lines(anscombe$x1, anscombe$y2, type = "b", pch = 15, cex = 0.5, col = "red", lwd = 4)
lines(anscombe$x1, anscombe$y3, type = "b", pch = 10, cex = 2,  col = "blue", lwd = 4)
lines(anscombe$x1, anscombe$y4, type = "b", pch = 8, cex = 2, col = "orange", lwd = 4)
legend("topleft",
legend = c("Line y1", "Line y2", "Line y3", "Line y4"),
col = c("black", "red", "blue", "orange"),
pch = c(16, 15, 10, 8))
plot(anscombe$x1, anscombe$y1, type = "b", pch = 16, cex = 0.5, lwd = 4)
lines(anscombe$x1, anscombe$y2, type = "b", pch = 15, cex = 0.5, col = "red", lwd = 4)
lines(anscombe$x1, anscombe$y3, type = "b", pch = 10, cex = 0.5,  col = "blue", lwd = 4)
lines(anscombe$x1, anscombe$y4, type = "b", pch = 8, cex = 0.5, col = "orange", lwd = 4)
legend("topleft",
legend = c("Line y1", "Line y2", "Line y3", "Line y4"),
col = c("black", "red", "blue", "orange"),
pch = c(16, 15, 10, 8))
plot(anscombe$x1, anscombe$y1, type = "b", pch = 16, cex = 0.5, lwd = 4)
lines(anscombe$x1, anscombe$y2, type = "b", pch = 15, cex = 0.5, col = "red", lwd = 4)
lines(anscombe$x1, anscombe$y3, type = "b", pch = 10, cex = 0.5,  col = "blue", lwd = 4)
lines(anscombe$x1, anscombe$y4, type = "b", pch = 8, cex = 0.5, col = "orange", lwd = 4)
legend("topleft",
legend = c("Line y1", "Line y2", "Line y3", "Line y4"),
col = c("black", "red", "blue", "orange"),
pch = c(16, 15, 10, 8))
install.packages("ggplot2")                             # Install and load ggplot2
library("ggplot2")
library("tidyverse")
library("tidyverse")
ggplot(anscombe, aes(x = x1, y = y1, col = line)) +
geom_line()
library("tidyverse")
ggplot(anscombe, aes(x = x1, y = y1, col = line)) +
geom_line()
library("tidyverse")
ggplot(anscombe, aes(x = x1, y = y1, col = red)) +
geom_line()
library("tidyverse")
ggplot(anscombe, aes(x = x1, y = y1)) +
geom_line()
library("tidyverse")
ggplot(anscombe, aes(x = x1, y = y1)) +
geom_line()
library("tidyverse")
ggplot(anscombe, aes(x = x1, y = y1)) +
geom_line()
library("tidyverse")
ggplot(anscombe, aes(x = x1, y = y1)) +
geom_point() +
geom_line()
ggplot(anscombe,aes(x1, y1)) +
geom_point() +
geom_smooth(method='lm', se=FALSE)
ggplot(anscombe,aes(x1, y1)) +
geom_point() +
geom_smooth(method='lm', se=TRUE)
ggplot(anscombe,aes(x1, y1)) +
geom_point() +
geom_smooth(method='lm', se=TRUE)
ggplot(anscombe,aes(x2, y2)) +
geom_point() +
geom_smooth(method='lm', se=TRUE)
ggplot(anscombe,aes(x1, y1)) +
geom_point() +
geom_smooth(method='lm', se=TRUE)
ggplot(anscombe,aes(x2, y2)) +
geom_point() +
geom_smooth(method='lm', se=TRUE)
ggplot(anscombe,aes(x3, y3)) +
geom_point() +
geom_smooth(method='lm', se=TRUE)
ggplot(anscombe,aes(x4, y4)) +
geom_point() +
geom_smooth(method='lm', se=TRUE)
par(mfrow = c(2, 2))
par(bg = "powderblue")
plot(anscombe$x1,anscombe$y1)
abline(coefficients(lm1))
plot(anscombe$x2,anscombe$y2)
abline(coefficients(lm2))
plot(anscombe$x3,anscombe$y3)
abline(coefficients(lm3))
plot(anscombe$x4,anscombe$y4)
abline(coefficients(lm4))
display.brewer.all(type="qual")
library(RColorBrewer)
display.brewer.all(type="qual")
source("C:/Users/pratt/OneDrive - The University of Texas at Dallas/Data Visualization/prattashaislam.github.io/posts/Assignment 05/hack2.R", echo=TRUE)
setwd("C:/Users/pratt/OneDrive - The University of Texas at Dallas/Data Visualization/prattashaislam.github.io/posts/Assignment 05")
source("C:/Users/pratt/OneDrive - The University of Texas at Dallas/Data Visualization/prattashaislam.github.io/posts/Assignment 05/hack2.R", echo=TRUE)
source("C:/Users/pratt/OneDrive - The University of Texas at Dallas/Data Visualization/prattashaislam.github.io/posts/Assignment 05/hack2.R", echo=TRUE)
source("C:/Users/pratt/OneDrive - The University of Texas at Dallas/Data Visualization/prattashaislam.github.io/posts/Assignment 05/hack2.R", echo=TRUE)
library(tidyverse)
library(WDI)
spgrades <- data.frame(read.csv("Spring2022grades.csv"))
fagrades <- data.frame(read.csv("Fall2021grades.csv"))
grades <- rbind(fagrades, spgrades) #Combine two datasets into one dataframe
instructor <- grep("Instructor", colnames(grades), value = TRUE)
grades$Course <- paste(grades$Subject, grades$Catalog.Number)
kh_grades <- grades%>%
filter(Instructor.1=="Ho, Karl")%>%
select(-instructor,-Section, -Subject, -Catalog.Number)
cc <- kh_grades %>%
select(Course, A.x, A.y)
cc
cc %>%
ggplot()+
geom_col(mapping = aes(x=Course, y=A.x),
fill = c("limegreen","limegreen", "springgreen4","limegreen", "limegreen")) +
labs(x = "Course", y = "A Grade",
title="A Grades in Dr. Karl Ho's Class",
subtitle = "Fall 2021 & Spring 2022") +
geom_text(aes(x=Course, y=A.x,label= A.x),vjust=1.2, size=5,col = "white")
cc <- kh_grades %>%
select(Course, A.x, A.y)
cc
cc %>%
ggplot()+
geom_col(mapping = aes(x=Course, y=A.x),
fill = c("limegreen","limegreen", "springgreen4","limegreen", "limegreen")) +
labs(x = "Course", y = "A Grade",
title="A Grades in Dr. Karl Ho's Class",
subtitle = "Fall 2021 & Spring 2022") +
geom_text(aes(x=Course, y=A.x,label= A.x),vjust=1.2, size=5,col = "white")
#| warning: false
#| fig-cap: ""
dim1 <- c(rnorm(100, mean=1), rnorm(100, mean=4))
dim2 <- rnorm(200, mean=1)
cat <- factor(c(rep("a", 100), rep("b", 100)))
mydf <- data.frame(cbind(dim2, dim1, cat))
p <- ggplot(data=mydf, aes(x=dim1, y=dim2, colour=as.factor(cat))) +
geom_point() +
stat_density(aes(x=dim1, y=(-2+(..scaled..))),
position="identity", geom="line")
#| warning: false
#| fig-cap: ""
library(tidyverse)
dim1 <- c(rnorm(100, mean=1), rnorm(100, mean=4))
dim2 <- rnorm(200, mean=1)
cat <- factor(c(rep("a", 100), rep("b", 100)))
mydf <- data.frame(cbind(dim2, dim1, cat))
p <- ggplot(data=mydf, aes(x=dim1, y=dim2, colour=as.factor(cat))) +
geom_point() +
stat_density(aes(x=dim1, y=(-2+(..scaled..))),
position="identity", geom="line")
stuff <- ggplot_build(p)
xrange <- stuff[[2]]$ranges[[1]]$x.range  # extract the x range to make the
# new densities align with y-axis
## Get densities of dim2
ds <- do.call(rbind, lapply(unique(mydf$cat), function(lev) {
dens <- with(mydf, density(dim2[cat==lev]))
data.frame(x=dens$y+xrange[1], y=dens$x, cat=lev)
}))
#| warning: false
#| fig-cap: ""
---
title: "Storyboard Demonstration"
#| warning: false
#| fig-cap: ""
---
title: "Storyboard Demonstration"
#| warning: false
#| fig-cap: ""
output:
flexdashboard::flex_dashboard:
storyboard: true
#| warning: false
#| fig-cap: ""
### Gapminder is based on the Gapminder data, showing the life expectancy, population, GDP PC data, etc.
library(ggplot2)
library(gapminder)
options( scipen = 1 ) # turn off scientific notation with positive value
ggplot(data = gapminder,
mapping = aes(x = gdpPercap,
y = lifeExp,
color = continent)) +
geom_point(cex = 1) +
geom_smooth(method = "loess", color = "red") + scale_x_log10() +
xlab("GDP per capita") +
ylab("Life Expectancy") +
theme_bw() +
theme(legend.position = c(.85, .2)) +
theme(text = element_text(size = 14, family = "Palatino"))
#This is a sample dashboard design based on flexdashboard sample layout (storyboard).  More detail can be included in the sidebar (note the asterisks above the text), explaining the data in chart.  Markdown codes can be used for giving narratives to the charts/demonstrations.
### Happy Planet Index
library(rbokeh)
hpi2016=read.csv("https://raw.githubusercontent.com/datageneration/datavisualization/master/data/hpi2016all.csv")
figure(width = 800, height = 600, legend_location = "top_left") %>%
ly_points(AverageLifeExpectancy, HappyPlanetIndex, data = hpi2016, color = Region, glyph = Region, size = 5, hover = list(Country, GDPPC))
#Happy Planet Index data are presented here. This is to demo the story of the chart created using bokeh.
### Leaflet
library(leaflet)
library(maps)
eppsmap <- leaflet() %>% setView(-96.7478372, 32.9886268, zoom=14)
esri <- grep("^Esri", providers, value = TRUE)
for (provider in esri) {
eppsmap <- eppsmap %>% addProviderTiles(provider, group = provider)
}
find_me_at <- paste(sep = "<br/>",
"<b><a href='http://karlho.com' target='_blank'>Karl Ho </a></b>",
"<b><a href='http://epps.utdallas.edu' target='_blank'>School of Economic, </a></b>",
"<b><a href='http://epps.utdallas.edu' target='_blank'>Political and Policy Sciences</a></b>",
"<b><a href='http://www.utdallas.edu' target='_blank'>University of Texsa at Dallas</a></b>",
"800 West Campbell Road, GR31",
"Richardson TX 75080"
)
eppsmap %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = TRUE)) %>%
# addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
#           position = "bottomleft") %>%
addMarkers(eppsmap, lng=-96.7478372, lat=32.9886268, popup=find_me_at)  %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}")
3
### Base plot
library(RColorBrewer)
plot(pressure, pch=20, col = "firebrick")
#This is a simple base plot.
### D3_Chord diagram
knitr::include_url("https://observablehq.com/embed/@d3/chord-diagram?cells=chart", height = "600")
#External content can be loaded here: in this case, a D3 object/chart.
### D3 Laddar Graph
knitr::include_url("https://karlho.github.io/D3/lg_twclimate/index.html", height = "600")
setwd("C:/Users/pratt/OneDrive - The University of Texas at Dallas/Fall 2022/Data Visualization/prattashaislam.github.io")
setwd("C:/Users/pratt/OneDrive - The University of Texas at Dallas/Fall 2022/Data Visualization/prattashaislam.github.io")
setwd("C:/Users/pratt/OneDrive - The University of Texas at Dallas/Fall 2022/Data Visualization/prattashaislam.github.io")

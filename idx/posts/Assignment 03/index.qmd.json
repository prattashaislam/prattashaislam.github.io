{"title":"Assignment 03","markdown":{"yaml":{"title":"Assignment 03","author":"Prattasha Nawar Islam","date":"2022-09-20","categories":["R","Code","Visuals","Assignments"],"image":"lm charts","format":{"html":{"code-fold":true,"code-tools":true}}},"headingText":"Anscombe (1973) Quartlet","containsRefs":false,"markdown":"\n\n**Assignment 3**\n\n```{r}\n\n\ndata(anscombe)  # Load Anscombe's data\nView(anscombe) # View the data\nsummary(anscombe)\n\n## Simple version\nplot(anscombe$x1,anscombe$y1)\n```\n\n**ANSCOMBE Regression Models Comparison:**\n\nAll four regression models below shows a p-value of 0.00217, which is less than the commonly used significance level of 0.05. This shows that all of these models are statistically significant. All the models have the same value of 3.00 for their intercept coefficient and the same value of 0.5 for the coefficients of x1, x2, x3, and x4. The models have the same standard errors for the variables, same t-stat values and same adjusted R squared values. A multiple R squared value of 0.66 indicates that there is a fairly strong relationship between the independent and dependent variables. All the other values from the models are also the same on average which shows that the variables have the same relationship between them. The fitted lines in the plots also suggests that all four models have the same relationship.\n\n```{r}\n# Create four model objects\nlm1 <- lm(y1 ~ x1, data=anscombe)\nsummary(lm1)\nlm2 <- lm(y2 ~ x2, data=anscombe)\nsummary(lm2)\nlm3 <- lm(y3 ~ x3, data=anscombe)\nsummary(lm3)\nlm4 <- lm(y4 ~ x4, data=anscombe)\nsummary(lm4)\nplot(anscombe$x1,anscombe$y1)\nabline(coefficients(lm1))\nplot(anscombe$x2,anscombe$y2)\nabline(coefficients(lm2))\nplot(anscombe$x3,anscombe$y3)\nabline(coefficients(lm3))\nplot(anscombe$x4,anscombe$y4)\nabline(coefficients(lm4))\n```\n\n```{r}\n## Fancy version (per help file)\n\nff <- y ~ x\nmods <- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n\n# Plot using for loop\nfor(i in 1:4) {\n  ff[2:3] <- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  ## or   ff[[2]] <- as.name(paste0(\"y\", i))\n  ##      ff[[3]] <- as.name(paste0(\"x\", i))\n  mods[[i]] <- lmi <- lm(ff, data = anscombe)\n  print(anova(lmi))\n}\n\nsapply(mods, coef)  # Note the use of this function\nlapply(mods, function(fm) coef(summary(fm)))\n\n\n# Preparing for the plots\nop <- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n\n# Plot charts using for loop\nfor(i in 1:4) {\n  ff[2:3] <- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, col = \"red\", pch = 21, bg = \"orange\", cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"blue\")\n}\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\npar(op)\n```\n\n**Fine-tuning and modifying the charts:**\n\nBelow code shows how the par function is used to modify the regression model plots. The mfrow argument in the par function is used to draw multiple graphs in the same window. And the bg argument is used to input a background color to the window.\n\n```{r}\npar(mfrow = c(2, 2))\npar(bg = \"powderblue\")\nplot(anscombe$x1,anscombe$y1)\nabline(coefficients(lm1))\nplot(anscombe$x2,anscombe$y2)\nabline(coefficients(lm2))\nplot(anscombe$x3,anscombe$y3)\nabline(coefficients(lm3))\nplot(anscombe$x4,anscombe$y4)\nabline(coefficients(lm4))\n```\n\nPlotting multiple lines to one graph.\n\nThe graph below looks messy but this is just to show how to plot multiple relationships in the same graph (how x1 in the anscombe dataset varies with y1, y2, y3, y4). Specifying the type=\"b\" assigns a specific point symbol to each line and modifying the pch argument shows different signs for those symbols for each line. The size of the symbols depend on the cex value. Different colors are assigned to different lines using the col argument. The lwd argument specifies the thickness of the line.\n\n```{r}\nplot(anscombe$x1, anscombe$y1, type = \"b\", pch = 16, cex = 0.5, lwd = 4)                      \nlines(anscombe$x1, anscombe$y2, type = \"b\", pch = 15, cex = 0.5, col = \"red\", lwd = 4)               \nlines(anscombe$x1, anscombe$y3, type = \"b\", pch = 10, cex = 0.5,  col = \"blue\", lwd = 4) \nlines(anscombe$x1, anscombe$y4, type = \"b\", pch = 8, cex = 0.5, col = \"orange\", lwd = 4)\n\nlegend(\"topleft\",\n       legend = c(\"Line y1\", \"Line y2\", \"Line y3\", \"Line y4\"),\n       col = c(\"black\", \"red\", \"blue\", \"orange\"),\n       pch = c(16, 15, 10, 8))\n```\n\n**Using ggplot2 package to plot:**\n\nWith the ggplot2 package, (under tidyverse), graphs can be created much easily with single line commands. The graph below simply shows the relationship between x1 and y1 with a line using geom_line and the points using geom_point.\n\n```{r}\nlibrary(\"tidyverse\")\nggplot(anscombe, aes(x = x1, y = y1)) +\n  geom_point() +\n  geom_line()\n```\n\nPlotting regression models using ggplot2 package.\n\nThe regression models in the anscombe dataset, which were done previously, is now plotted below using the ggplot2 package. Here, specifying the method as lm in the geom_smooth argument displays the regression line. The se=TRUE argument displays the standard error lines. Keeping it at FALSE would simply hide it.\n\n```{r}\nggplot(anscombe,aes(x1, y1)) +\n  geom_point() +\n  geom_smooth(method='lm', se=TRUE) \n\nggplot(anscombe,aes(x2, y2)) +\n  geom_point() +\n  geom_smooth(method='lm', se=TRUE) \n\nggplot(anscombe,aes(x3, y3)) +\n  geom_point() +\n  geom_smooth(method='lm', se=TRUE) \n\nggplot(anscombe,aes(x4, y4)) +\n  geom_point() +\n  geom_smooth(method='lm', se=TRUE) \n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.1.189","editor":"visual","theme":"lux","title-block-banner":true,"title":"Assignment 03","author":"Prattasha Nawar Islam","date":"2022-09-20","categories":["R","Code","Visuals","Assignments"],"image":"lm charts"},"extensions":{"book":{"multiFile":true}}}}}
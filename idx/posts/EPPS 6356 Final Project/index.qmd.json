{"title":"EPPS 6356 Final Project","markdown":{"yaml":{"title":"EPPS 6356 Final Project","author":"By Prattasha, Bel, Kaitlyn, and Leonardo","date":"2022-12-06","categories":["R","Code","Blog","Project"],"image":"image.png","format":{"html":{"code-fold":true,"code-tools":true,"code-copy":true}}},"headingText":"| echo: false","containsRefs":false,"markdown":"\n\n[Link to Final Project Paper](LeonardAyala_Final Paper_12-8-2022.pdf)\n\n```{r, out.width=\"0.9\\\\linewidth\", include=TRUE, fig.align=\"center\", fig.cap=c(\"Final Project Presenation\"), echo=FALSE}\nknitr::include_graphics(\"Presentation1.pdf\")\n```\n\n[Link to Presentation](Presentation1.pdf)\n\n```{r setup1 Climate}\n#| warning: false\n#| output: false\n\n# clear memory\nrm(list=ls())\n\n#Tidyverse to use pipe operation\nlibrary(tidyverse)\n\n#Import data\nclimate <- read.csv(\"climate.csv\")\nconflict <- read.csv(\"conflict.csv\")\n\n\n# Clean Climate Data ------------------------------------------------------\n\n#Make the Indicator variable shorter \nclimate$Indicator[grepl(\"Drought\",climate$Indicator)]<-\"Drought\"\nclimate$Indicator[grepl(\"Extreme temperature\",climate$Indicator)]<-\"Extreme.temp\"\nclimate$Indicator[grepl(\"Flood\",climate$Indicator)]<-\"Flood\"\nclimate$Indicator[grepl(\"Landslide\",climate$Indicator)]<-\"Landslide\"\nclimate$Indicator[grepl(\"Storm\",climate$Indicator)]<-\"Storm\"\nclimate$Indicator[grepl(\"Wildfire\",climate$Indicator)]<-\"Wildfire\"\nclimate$Indicator[grepl(\"TOTAL\",climate$Indicator)]<-\"TOTAL\"\n\nclimate$Country[grepl(\"Ethiopia\",climate$Country)]<-\"Ethiopia\"\nclimate$Country[grepl(\"South Sudan\",climate$Country)]<-\"South Sudan\"\n\n# Filter columns\ncli.ss <- climate%>%\n  filter(Country==\"South Sudan\")%>%\n  select(-1, -2, -3, -5, -6, -7)\n\ncli.cam <- climate%>%\n  filter(Country==\"Cameroon\")%>%\n  select(-1, -2, -3, -5, -6, -7)\n\ncli.al <- climate%>%\n  filter(Country==\"Algeria\")%>%\n  select(-1, -2, -3, -5, -6, -7)\n\ncli.eth <- climate%>%\n  filter(Country==\"Ethiopia\")%>%\n  select(-1, -2, -3, -5, -6, -7)\n\n#Transpose time dataframe\ncli.ss.t <- t(cli.ss)\ncli.cam.t <- t(cli.cam)\ncli.al.t <- t(cli.al)\ncli.eth.t <- t(cli.eth)\n\n# Create a function that makes the first observation the header\nheader.true <- function(df) {\n  names(df) <- as.character(unlist(df[1,]))\n  df[-1,]\n}\n\n#Apply header, and convert the transposed data to dataframe\ncli.ss.t <- cli.ss.t|>\n  data.frame()|>\n  header.true()\n\ncli.cam.t <- cli.cam.t|>\n  data.frame()|>\n  header.true()\n\ncli.al.t <- cli.al.t|>\n  data.frame()|>\n  header.true()\n\ncli.eth.t <- cli.eth.t|>\n  data.frame()|>\n  header.true()\n\n#Add a date column back\ncli.ss.t$Date <- seq(from = 1980, to = 2021)\ncli.cam.t$Date <- seq(from = 1980, to = 2021)\ncli.al.t$Date <- seq(from = 1980, to = 2021)\ncli.eth.t$Date <- seq(from = 1980, to = 2021)\n\n# Replace NA with 0\ncli.ss.t[is.na(cli.ss.t)] <- 0\ncli.cam.t[is.na(cli.cam.t)] <- 0\ncli.al.t[is.na(cli.al.t)] <- 0\ncli.eth.t[is.na(cli.eth.t)] <- 0\n\n#Create Time Series and Replace NA with 0\ncli.ss.time <- ts(cli.ss.t, start=c(1980,1),end=c(2021,1),frequency=1)\ncli.cam.time <- ts(cli.cam.t, start=c(1980,1),end=c(2021,1),frequency=1)\ncli.al.time <- ts(cli.al.t, start=c(1980,1),end=c(2021,1),frequency=1)\ncli.eth.time <- ts(cli.eth.t, start=c(1980,1),end=c(2021,1),frequency=1)\n\n# Create de-aggregated climate data -----------------------------------------------\n\n# data.table::update_dev_pkg()\nlibrary(data.table)\n\n# Drop total column\ncli.ss.t <- cli.ss.t%>%\n  select(-TOTAL)\ncli.cam.t <- cli.cam.t%>%\n  select(-TOTAL)\ncli.al.t <- cli.al.t%>%\n  select(-TOTAL)\ncli.eth.t <- cli.eth.t%>%\n  select(-TOTAL)\n\n# Transform data with melt\nss <- melt( setDT(cli.ss.t), id.vars = \"Date\", variable.name = \"Disaster\" )\nss[ rep(seq(.N), value), !\"value\"]\n\ncam <- melt( setDT(cli.cam.t), id.vars = \"Date\", variable.name = \"Disaster\" )\ncam[ rep(seq(.N), value), !\"value\"]\n\nal <- melt( setDT(cli.al.t), id.vars = \"Date\", variable.name = \"Disaster\" )\nal[ rep(seq(.N), value), !\"value\"]\n\neth <- melt( setDT(cli.eth.t), id.vars = \"Date\", variable.name = \"Disaster\" )\neth[ rep(seq(.N), value), !\"value\"]\n\n# Make all values integers\nss$value<-strtoi(ss$value)\ncam$value<-strtoi(cam$value)\nal$value<-strtoi(al$value)\neth$value<-strtoi(eth$value)\n\n```\n\n```{r areaplots}\n#| warning: false\n\n# Visualization with area plots*** -------------------------------------------\n\n### ggplot geom_area\n# Go to Create de-aggregated data\n# Uncomment drop TOTAL\nlibrary(ggplot2)\ncli.ss.plot <- ggplot(ss, aes(x=ss$Date, y=ss$value, fill=Disaster)) +\n  geom_area(alpha=0.3)+\n  xlim(2005, 2023)+\n  labs(title = \"Number of Natural Disasters\",\n       subtitle = \"in South Sudan\")+\n  theme(plot.title    = element_text(family = \"Luminari\"),\n        plot.subtitle = element_text(family = \"sans\"),\n        axis.title.x  = element_text(family = \"AppleGothic\"),\n        axis.title.y  = element_text(family = \"AppleGothic\"),\n        axis.text.x   = element_text(family = \"Optima\"),\n        axis.text.y   = element_text(family = \"Optima\"))+\n  xlab(\"Year\") + ylab(\"Number of Disasters\")+\n  scale_fill_manual(values = c(\"Drought\" = \"goldenrod1\",\n                               \"Flood\"=\"blue\",\n                               \"Wildfire\"=\"orangered3\",\n                               \"Storm\"=\"palevioletred3\",\n                               \"Landslide\"=\"darkgreen\",\n                               \"Extreme.temp\"=\"saddlebrown\")) \ncli.ss.plot\n\ncli.cam.plot <- ggplot(cam, aes(x=Date, y=value, fill=Disaster)) +\n  geom_area(alpha=0.3)+\n  xlim(1950,2022)+\n  labs(title = \"Number of Natural Disasters\",\n       subtitle = \"in Cameroon\")+\n  theme(plot.title    = element_text(family = \"Luminari\"),\n        plot.subtitle = element_text(family = \"sans\"),\n        axis.title.x  = element_text(family = \"AppleGothic\"),\n        axis.title.y  = element_text(family = \"AppleGothic\"),\n        axis.text.x   = element_text(family = \"Optima\"),\n        axis.text.y   = element_text(family = \"Optima\"))+\n  xlab(\"Year\") + ylab(\"Number of Disasters\")+\n  scale_fill_manual(values = c(\"Drought\" = \"goldenrod1\",\n                               \"Flood\"=\"blue\",\n                               \"Wildfire\"=\"orangered3\",\n                               \"Storm\"=\"palevioletred3\",\n                               \"Landslide\"=\"darkgreen\",\n                               \"Extreme.temp\"=\"saddlebrown\")) \ncli.cam.plot\n\ncli.al.plot <- ggplot(al, aes(x=Date, y=value, fill=Disaster)) +\n  geom_area(alpha=0.3)+\n  xlim(1950,2023)+\n  labs(title = \"Number of Natural Disasters\",\n       subtitle = \"in Algeria\")+\n  theme(plot.title    = element_text(family = \"Luminari\"),\n        plot.subtitle = element_text(family = \"sans\"),\n        axis.title.x  = element_text(family = \"AppleGothic\"),\n        axis.title.y  = element_text(family = \"AppleGothic\"),\n        axis.text.x   = element_text(family = \"Optima\"),\n        axis.text.y   = element_text(family = \"Optima\"))+\n  xlab(\"Year\") + ylab(\"Number of Disasters\")+\n  scale_fill_manual(values = c(\"Drought\" = \"goldenrod1\",\n                               \"Flood\"=\"blue\",\n                               \"Wildfire\"=\"orangered3\",\n                               \"Storm\"=\"palevioletred3\",\n                               \"Landslide\"=\"darkgreen\",\n                               \"Extreme.temp\"=\"saddlebrown\")) \ncli.al.plot\n\ncli.eth.plot <- ggplot(eth, aes(x=Date, y=value, fill=Disaster)) +\n  geom_area(alpha=0.3)+\n  xlim(1950,2023)+\n  labs(title = \"Number of Natural Disasters\",\n       subtitle = \"in Ethiopia\")+\n  theme(plot.title    = element_text(family = \"Luminari\"),\n        plot.subtitle = element_text(family = \"sans\"),\n        axis.title.x  = element_text(family = \"AppleGothic\"),\n        axis.title.y  = element_text(family = \"AppleGothic\"),\n        axis.text.x   = element_text(family = \"Optima\"),\n        axis.text.y   = element_text(family = \"Optima\"))+\n  xlab(\"Year\") + ylab(\"Number of Disasters\")+\n  scale_fill_manual(values = c(\"Drought\" = \"goldenrod1\",\n                               \"Flood\"=\"blue\",\n                               \"Wildfire\"=\"orangered3\",\n                               \"Storm\"=\"palevioletred3\",\n                               \"Landslide\"=\"darkgreen\",\n                               \"Extreme.temp\"=\"saddlebrown\")) \n\ncli.eth.plot\n\n```\n\n```{r setup2 Conflict}\n#| echo: false\n#| warning: false\n#| output: false\n\n# Conflict ----------------------------------------------------------------\n\n# Load data\nconflict <- read.csv(\"conflict.csv\")\n\n\n# Grep Country ------------------------------------------------------------\n\nconflict$location[grepl(\"South Sudan\",conflict$location)]<-\"South Sudan\"\nconflict$location[grepl(\"Cameroon\",conflict$location)]<-\"Cameroon\"\nconflict$location[grepl(\"Algeria\",conflict$location)]<-\"Algeria\"\nconflict$location[grepl(\"Ethiopia\",conflict$location)]<-\"Ethiopia\"\n\n\n# filter columns, select countries  ----------------------------------------------------------\n\nconflict <- conflict|>\n  select(conflict_id, location, start_date, start_date2, ep_end_date,\n         intensity_level)|>\n  filter(location== c(\"South Sudan\", \"Cameroon\",\n                      \"Algeria\", \"Ethiopia\"))\n\n# Select on rows with end date\n# conflict <- conflict[-which(conflict$ep_end_date == \"\"), ]\n\n# Assign end date to rows without end date\nconflict$ep_end_date[conflict$ep_end_date == \"\"] <- \"2022-12-06\"\n\n# Make conflict_id a factor\nconflict$conflict_id = factor(conflict$conflict_id)\n\n# Make intensity_level a factor\nconflict$intensity_level = factor(conflict$intensity_level)\n\n# POSIX -------------------------------------------------------------------\n\n### Change this date for each country!!! \nconflict.time <- as.POSIXct(conflict$start_date,\n                            tz = \"\", origin=\"1954-01-01\")\n\n\n# Graph\n\nlibrary(ggplot2)\nlibrary(scales)\n\n# Matrix with ggarrange ---------------------------------------------------------------\n\n# install.packages(\"ggpubr\")\nlibrary(ggplot2)\nlibrary(\"ggpubr\")\ntheme_set(\n  theme_bw() +\n    theme(legend.position = \"top\")\n)\n\n```\n\n```{r South Sudan geom_segment}\n#| echo: false\n#| warning: false\n\n# geom_segment with South Sudan and ggarrange*** ------------------------------------------------------------\n\nlibrary(scales)\n\ncon <- conflict|>\n  filter(location==\"South Sudan\")\n\n\ncon.seg <- ggplot(con, aes(y=location)) +\n  geom_segment(aes(x=as.Date(start_date), xend=as.Date(ep_end_date), \n                   y=conflict_id,yend=conflict_id, color=intensity_level),\n               size=5, alpha=1)+\n  scale_x_date(date_breaks = \"5 year\", date_labels =\"%Y\",\n               limits = as.Date(c(\"2005-01-01\", \"2023-01-01\"),format=\"%Y\"))+\n  labs(title = \"Number of Natural Disasters\",\n       subtitle = \"in South Sudan\",\n       x = \"Year\",\n       y = \"\\nConflict ID\")+\n  theme(plot.title    = element_text(family = \"Luminari\"),\n        plot.subtitle = element_text(family = \"sans\"),\n        axis.title.x  = element_text(family = \"AppleGothic\"),\n        axis.title.y  = element_text(family = \"AppleGothic\"),\n        axis.text.x   = element_text(family = \"Optima\"),\n        axis.text.y   = element_text(family = \"Optima\"))+\n  theme_bw()+\n  # Legend\n  labs(fill = \"Intensity Level\")+\n  scale_color_manual(labels = c(\"Minor: 25-999\\nbattle-related deaths\", \n                                \"War: 1,000+\\nbattle-related deaths\"),\n                     name=\"Intensity Level\",\n                     values = c(\"slateblue\", \"firebrick2\"))+\n  theme(legend.position = c(0.75, 0.7))\n\ncon.seg\n```\n\n```{r South_Sudan_Combined, fig.width=5,fig.height=6}\n#| warning: false\n\nsudan <- ggarrange(cli.ss.plot, con.seg, \n          heights = c(2, 1.5),\n          align = \"v\",\n          ncol = 1, nrow = 2)\nsudan\n```\n\n```{r Cameroon geom_segment}\n#| echo: false\n#| warning: false\n\n\n#   Cameroon -----------------------------------------------------------------------\n\ncon <- conflict|>\n  filter(location==\"Cameroon\")\n\n\ncon.seg <- ggplot(con, aes(y=location)) +\n  geom_segment(aes(x=as.Date(start_date), xend=as.Date(ep_end_date), \n                   y=conflict_id,yend=conflict_id, color=intensity_level),\n               size=5, alpha=1)+\n  scale_x_date(date_breaks = \"10 year\", date_labels =\"%Y\",\n               limits = as.Date(c(\"1950-01-01\", \"2023-01-01\"),format=\"%Y\"))+\n  labs(title = \"Number of Natural Disasters\",\n       subtitle = \"in Cameroon\",\n       x = \"Year\",\n       y = \"\\nConflict ID\")+\n  theme(plot.title    = element_text(family = \"Luminari\"),\n        plot.subtitle = element_text(family = \"sans\"),\n        axis.title.x  = element_text(family = \"AppleGothic\"),\n        axis.title.y  = element_text(family = \"AppleGothic\"),\n        axis.text.x   = element_text(family = \"Optima\"),\n        axis.text.y   = element_text(family = \"Optima\"))+\n  ylab(\"\\n\\nConflict ID\")+ xlab(\"Date\")+\n  theme_bw()+\n  # Legend\n  labs(fill = \"Intensity Level\")+\n  scale_color_manual(labels = c(\"Minor: 25-999\\nbattle-related deaths\", \n                                \"War: 1,000+\\nbattle-related deaths\"),\n                     name=\"Intensity Level\",\n                     values = c(\"slateblue\", \"firebrick2\"))+\n  theme(legend.position = c(0.5, 0.9))\n\ncon.seg\n\n\n```\n\n```{r Cameroon_Combined, fig.width=5,fig.height=6}\n#| warning: false\n\nggarrange(cli.cam.plot, con.seg, \n          heights = c(1.5, 1.5),\n          align = \"v\",\n          ncol = 1, nrow = 2)\n\n```\n\n```{r Algeria_geom_segment}\n#| warning: false\n\n\ncon <- conflict|>\n  filter(location==\"Algeria\")\n\ncon.seg <- ggplot(con, aes(y=location)) +\n  geom_segment(aes(x=as.Date(start_date), xend=as.Date(ep_end_date), \n                   y=conflict_id,yend=conflict_id, color=intensity_level),\n               size=5, alpha=1)+\n  scale_x_date(date_breaks = \"10 year\", date_labels =\"%Y\",\n               limits = as.Date(c(\"1950-01-01\", \"2023-01-01\"),format=\"%Y\"))+\n  labs(title = \"Number of Natural Disasters\",\n       subtitle = \"in Algeria\",\n       x = \"Year\",\n       y = \"\\nConflict ID\")+\n  theme(plot.title    = element_text(family = \"Luminari\"),\n        plot.subtitle = element_text(family = \"sans\"),\n        axis.title.x  = element_text(family = \"AppleGothic\"),\n        axis.title.y  = element_text(family = \"AppleGothic\"),\n        axis.text.x   = element_text(family = \"Optima\"),\n        axis.text.y   = element_text(family = \"Optima\"))+\n  ylab(\"\\nConflict ID\")+ xlab(\"Date\")+\n  theme_bw()+\n  # Legend\n  labs(fill = \"Intensity Level\")+\n  scale_color_manual(labels = c(\"Minor: 25-999\\nbattle-related deaths\", \n                                \"War: 1,000+\\nbattle-related deaths\"),\n                     name=\"Intensity Level\",\n                     values = c(\"slateblue\", \"firebrick2\"))+\n  theme(legend.position = c(0.3, 0.85))\n\ncon.seg\n```\n\n```{r Algeria_Combined, fig.width=5,fig.height=6}\n#| warning: false\n\nggarrange(cli.al.plot, con.seg, \n          heights = c(1.5, 1.5),\n          align = \"v\",\n          ncol = 1, nrow = 2)\n\n```\n\n```{r Ethiopia geom_segment}\n#| echo: false\n#| warning: false\n\ncon <- conflict|>\n  filter(location==\"Ethiopia\")\n\ncon.seg <- ggplot(con, aes(y=location)) +\n  geom_segment(aes(x=as.Date(start_date), xend=as.Date(ep_end_date), \n                   y=conflict_id,yend=conflict_id, color=intensity_level),\n               size=5, alpha=1)+\n  scale_x_date(date_breaks = \"10 year\", date_labels =\"%Y\",\n               limits = as.Date(c(\"1950-01-01\", \"2023-01-01\"),format=\"%Y\"))+\n  labs(title = \"Number of Natural Disasters\",\n       subtitle = \"in Ethiopiaia\",\n       x = \"Year\",\n       y = \"\\nConflict ID\")+\n  theme(plot.title    = element_text(family = \"Luminari\"),\n        plot.subtitle = element_text(family = \"sans\"),\n        axis.title.x  = element_text(family = \"AppleGothic\"),\n        axis.title.y  = element_text(family = \"AppleGothic\"),\n        axis.text.x   = element_text(family = \"Optima\"),\n        axis.text.y   = element_text(family = \"Optima\"))+\n  ylab(\"\\nConflict ID\")+ xlab(\"Date\")+\n  theme_bw()+\n  # Legend\n  labs(fill = \"Intensity Level\")+\n  scale_color_manual(labels = c(\"Minor: 25-999\\nbattle-related deaths\", \n                                \"War: 1,000+\\nbattle-related deaths\"),\n                     name=\"Intensity Level\",\n                     values = c(\"slateblue\", \"firebrick2\"))+\n  theme(legend.position = c(0.15, 0.7))\n\n\ncon.seg\n\n\n```\n\n```{r Ethiopia_Combined, fig.width=5,fig.height=6}\n#| warning: false\n\nggarrange(cli.eth.plot, con.seg, \n          heights = c(1.2, 1.2),\n          align = \"v\",\n          ncol = 1, nrow = 2)\n\n```\n\n```{r setup3 Economical Impact}\n#| echo: false\n#| warning: false\n#| output: false\n\n\n# Economical Impact -------------------------------------------------------\n\n\n#Import data\nclimate <- read.csv(\"natural-disasters_yearly.csv\")\n\n# clean data --------------------------------------------------------------\n\n# Filter by the countries that was selected\nclimate <- climate|>\n  filter(Entity=='South Sudan'|Entity== 'Cameroon'|\n           Entity=='Algeria'|Entity=='Ethiopia')\n\n# New df for Affected Rate ------------------------------------------------\n\n# Get column names with per capita affected\ntotal100k <- grep(\"Total.number.of.people.affected.*per.100.000\", \n                  colnames(climate), value=TRUE)\n\ntotal100k\n\n# Make new df\naffected_rate <- climate|>\n  select(c(total100k, Entity, Year))\n\n# Rename columns\n\ncolnames(affected_rate)[grepl(\"drought\",colnames(affected_rate))]<-\"Drought\"\ncolnames(affected_rate)[grepl(\"extreme.temperature\",colnames(affected_rate))]<-\"Extreme.temp\"\ncolnames(affected_rate)[grepl(\"flood\",colnames(affected_rate))]<-\"Flood\"\ncolnames(affected_rate)[grepl(\"landslide\",colnames(affected_rate))]<-\"Landslide\"\ncolnames(affected_rate)[grepl(\"storm\",colnames(affected_rate))]<-\"Storm\"\ncolnames(affected_rate)[grepl(\"wildfire\",colnames(affected_rate))]<-\"Wildfire\"\ncolnames(affected_rate)[grepl(\"earthquakes\",colnames(affected_rate))]<-\"Earthquakes\"\ncolnames(affected_rate)[grepl(\"disaster\",colnames(affected_rate))]<-\"All_Disasters\"\ncolnames(affected_rate)[grepl(\"volcanic\",colnames(affected_rate))]<-\"Volcanic_Act\"\ncolnames(affected_rate)[grepl(\"movement\",colnames(affected_rate))]<-\"Mass_Movement\"\ncolnames(affected_rate)[grepl(\"fog\",colnames(affected_rate))]<-\"Fog\"\ncolnames(affected_rate)[grepl(\"glacial\",colnames(affected_rate))]<-\"Glacial_Lake_Ourtbust\"\n\n# remove disaster columns that does not apply to countries selected\naffected_rate <- affected_rate|>\n  select(-Mass_Movement, -Fog, -Glacial_Lake_Ourtbust)\n\n#Turn affected rate to percentage\naffected_rate[,1:9] <- affected_rate[,1:9]/1000\n\n\n\n```\n\n```{r Disasters plots }\n#| warning: false\n#| fig-cap: \"Disaster Plots\" \n#| fig-subcap:\n#|   - \"Drought\"\n#|   - \"Flood\"\n#|   - \"Storm\"\n#|   - \"Extreme Temperature\"\n#|   - \"Landslide\"\n#|   - \"Wildfire\"\n#| layout-ncol: 2\n#| layout-nrow: 6\n\n# Affected by Disasters plots ***---------------------------------------------\n\nDrought <-ggplot(data=affected_rate, aes(x=Year)) +\n  geom_bar(stat=\"identity\", \n           aes(y=Drought, fill = Entity))+\n  scale_y_continuous(labels = scales::percent_format(scale = 1))+\n  ylab(\"Percentage of people affected by Drought\")+\n  scale_fill_brewer(palette = \"Set2\")+\n  theme(plot.title    = element_text(family = \"Luminari\"),\n        plot.subtitle = element_text(family = \"sans\"),\n        axis.title.x  = element_text(family = \"AppleGothic\"),\n        axis.title.y  = element_text(family = \"AppleGothic\"),\n        axis.text.x   = element_text(family = \"Optima\"),\n        axis.text.y   = element_text(family = \"Optima\"))+\n  ggtitle(\"Drought\")\n\nDrought\n\nFlood <-ggplot(data=affected_rate, aes(x=Year)) +\n  geom_bar(stat=\"identity\", \n           aes(y=Flood, fill = Entity))+\n  scale_y_continuous(labels = scales::percent_format(scale = 1))+\n  ylab(\"Percentage of people affected by Flood\")+\n  scale_fill_brewer(palette = \"Set2\")+\n  theme(plot.title    = element_text(family = \"Luminari\"),\n        plot.subtitle = element_text(family = \"sans\"),\n        axis.title.x  = element_text(family = \"AppleGothic\"),\n        axis.title.y  = element_text(family = \"AppleGothic\"),\n        axis.text.x   = element_text(family = \"Optima\"),\n        axis.text.y   = element_text(family = \"Optima\"))+\n  ggtitle(\"Flood\")\n\nFlood\n\nStorm <-ggplot(data=affected_rate, aes(x=Year)) +\n  geom_bar(stat=\"identity\", \n           aes(y=Storm, fill = Entity))+\n  scale_y_continuous(labels = scales::percent_format(scale = 1))+\n  ylab(\"Percentage of people affected by Storm\")+\n  scale_fill_brewer(palette = \"Set2\")+\n  theme(plot.title    = element_text(family = \"Luminari\"),\n        plot.subtitle = element_text(family = \"sans\"),\n        axis.title.x  = element_text(family = \"AppleGothic\"),\n        axis.title.y  = element_text(family = \"AppleGothic\"),\n        axis.text.x   = element_text(family = \"Optima\"),\n        axis.text.y   = element_text(family = \"Optima\"))+\n  ggtitle(\"Storm\")\n\nStorm\n\nExTemp <-ggplot(data=affected_rate, aes(x=Year)) +\n  geom_bar(stat=\"identity\", \n           aes(y=Extreme.temp, fill = Entity))+\n  scale_y_continuous(labels = scales::percent_format(scale = 1))+\n  ylab(\"Percentage of people affected by Extreme Temperature\")+\n  scale_fill_brewer(palette = \"Set2\")+\n  theme(plot.title    = element_text(family = \"Luminari\"),\n        plot.subtitle = element_text(family = \"sans\"),\n        axis.title.x  = element_text(family = \"AppleGothic\"),\n        axis.title.y  = element_text(family = \"AppleGothic\"),\n        axis.text.x   = element_text(family = \"Optima\"),\n        axis.text.y   = element_text(family = \"Optima\"))+\n  ggtitle(\"Extreme Temperature\")\n\nExTemp\n\nLandslide <-ggplot(data=affected_rate, aes(x=Year)) +\n  geom_bar(stat=\"identity\", \n           aes(y=Landslide, fill = Entity))+\n  scale_y_continuous(labels = scales::percent_format(scale = 1))+\n  ylab(\"Percentage of people affected by Landslide\")+\n  scale_fill_brewer(palette = \"Set2\")+\n  theme(plot.title    = element_text(family = \"Luminari\"),\n        plot.subtitle = element_text(family = \"sans\"),\n        axis.title.x  = element_text(family = \"AppleGothic\"),\n        axis.title.y  = element_text(family = \"AppleGothic\"),\n        axis.text.x   = element_text(family = \"Optima\"),\n        axis.text.y   = element_text(family = \"Optima\"))+\n  ggtitle(\"Landslide\")\n\nLandslide\n\nWildfire <-ggplot(data=affected_rate, aes(x=Year)) +\n  geom_bar(stat=\"identity\", \n           aes(y=Wildfire, fill = Entity))+\n  scale_y_continuous(labels = scales::percent_format(scale = 1))+\n  ylab(\"Percentage of people affected by Wildfire\")+\n  scale_fill_brewer(palette = \"Set2\")+\n  theme(plot.title    = element_text(family = \"Luminari\"),\n        plot.subtitle = element_text(family = \"sans\"),\n        axis.title.x  = element_text(family = \"AppleGothic\"),\n        axis.title.y  = element_text(family = \"AppleGothic\"),\n        axis.text.x   = element_text(family = \"Optima\"),\n        axis.text.y   = element_text(family = \"Optima\"))+\n  ggtitle(\"Wildfire\")\n\nWildfire\n\n\n\n\n```\n\n```{r Conflict intensity all countries}\n#| fig-cap: \"Conflicts and their level of intensity\" \n\n#   Conflict segment for all countries *** -----------------------------------------------------------------------\ncon.seg <- ggplot(conflict, aes(y=location)) +\n  geom_segment(aes(x=as.Date(start_date), xend=as.Date(ep_end_date), y=location, \n                   yend=location, color=intensity_level), size=5, alpha=0.5)+\n  scale_x_date(date_breaks = \"10 year\", date_labels =\"%Y\")+\n  xlab(\"Year\")+\n  ylab(\"Country\")+\n  ggtitle(\"Conflicts and their level of intensity\")+\n  # Legend\n  labs(fill = \"Intensity Level\")+\n  scale_color_manual(labels = c(\"Minor: 25-999\\nbattle-related deaths\", \n                                \"War: 1,000+\\nbattle-related deaths\"),\n                     name=\"Intensity Level\",\n                     values = c(\"slateblue\", \"firebrick2\"))\n\ncon.seg\n\n\n```\n\n```{r setup4 South Sudan}\n#| echo: false\n#| warning: false\n#| output: false\n\n\n# Filter by Country ---------------------------------------------------------\n\nss <- affected_rate|>\n  filter(Entity==\"South Sudan\")\n\ncam <- affected_rate|>\n  filter(Entity==\"Cameroon\")\n\nal <- affected_rate|>\n  filter(Entity==\"Algeria\")\n\neth <- affected_rate|>\n  filter(Entity==\"Ethiopia\")\n\n\n#   Combined Sudan -----------------------------------------------------------------------\n\n#       Assign South Sudan to df ---------------------------------------------------------------\ndf <- ss\n\n# Replace NA with 0\ndf[is.na(df)] <- 0\n\n\n#       Triangles for Drought ---------------------------------------------------\n\n\n\n#Create triangle tail with coordinate for Drought\ndf$x_Drought <- df$Year+(as.numeric(df$Drought)/10)\n\nx <- c()\n\nfor (n in 1:nrow(df)){\n  x <- c(x, df$Year[n])\n  x <- c(x, df$Year[n])\n  x <- c(x, df$x_Drought[n])\n}\nx\n\ny <- c()\n\nfor (n in 1:nrow(df)){\n  y <- c(y, 0)\n  y <- c(y, df$Drought[n])\n  y <- c(y, 0)\n}\ny\n\n# Create ID by year\nids <- factor(df$Year)\npositions <- data.frame(\n  Year = rep(ids, each = 3),\n  x,\n  y)\n\ndf2 <- merge(df, positions, by = c(\"Year\"))\n\nplot_drought <- \n  ggplot(df2, aes(x=Year))+\n  ylab(\"Drought\")+\n  ylim(0, 100)+\n  geom_polygon(fill = 'lemonchiffon', alpha = 0.7, \n               aes(group = Year, x=x, y=y))+\n  geom_bar(data=df, stat=\"identity\", fill='yellow',alpha = 0.4, width = 0.3, \n           aes(x=Year, y=Drought))\n\nplot_drought\n\n\n#       Triangles for Flood -----------------------------------------------------\n\ndf$x_Flood <- df$Year+(as.numeric(df$Flood)/10)\n\nx2 <- c()\n\nfor (n in 1:nrow(df)){\n  x2 <- c(x2, df$Year[n])\n  x2 <- c(x2, df$Year[n])\n  x2 <- c(x2, df$x_Flood[n])\n}\nx2\n\ny2 <- c()\n\nfor (n in 1:nrow(df)){\n  y2 <- c(y2, 0)\n  y2 <- c(y2, df$Flood[n])\n  y2 <- c(y2, 0)\n}\ny2\n\n# Create ID by year\nids <- factor(df$Year)\npositions <- data.frame(\n  Year = rep(ids, each = 3),\n  x2,\n  y2)\n\ndf2 <- merge(df2, positions, by = c(\"Year\"))\n\nplot_flood <- ggplot(df2, aes(x=Year))+\n  ylim(0, 100)+\n  ylab(\"Flood\")+\n  geom_polygon(fill = 'orange', alpha = 0.7, \n               aes(group = Year, x=x2, y=y2))+\n  geom_bar(data=df, stat=\"identity\", fill='blue',\n           alpha = 0.4,width = 0.7,\n           aes(x=Year, y=Flood))\n\nplot_flood\n\n\n#       Combined Triangles and Bar ------------------------------------------------------\n\nplot_combined <- \n  ggplot(df2, aes(x=Year))+\n  ylab(\"Combined\")+\n  ylim(0, 100)+\n  geom_polygon(fill = 'lemonchiffon', alpha = 0.7, \n               aes(group = Year, x=x, y=y))+\n  geom_bar(data=df, stat=\"identity\", fill='yellow', alpha = 0.4, width = 0.3, \n           aes(x=Year, y=Drought))+\n  geom_polygon(fill = 'orange', alpha = 0.7,\n               aes(group = Year, x=x2, y=y2))+\n  geom_bar(data=df, stat=\"identity\", fill='blue', alpha = 0.4,width = 0.3,\n           aes(x=Year, y=Flood))\n\nplot_combined\n\ncoeff_flood <- 2\n\nclimate_ss <-\n  ggplot(df2, aes(x=Year))+\n  geom_polygon(fill = 'lemonchiffon', alpha = 0.7, \n               aes(group = Year, x=x, y=y))+\n  geom_bar(data=df, stat=\"identity\", fill='yellow', alpha = 0.4, width = 0.3, \n           aes(x=Year, y=Drought))+\n  geom_polygon(fill = 'lightblue', alpha = 0.7,\n               aes(group = Year, x=x2, y=y2*coeff_flood))+\n  geom_bar(data=df, stat=\"identity\", fill='blue', alpha = 0.4,width = 0.3,\n           aes(x=Year, y=Flood*coeff_flood))+\n  scale_y_continuous(labels = scales::percent_format(scale = 1),\n                     # breaks = c(2,4,6),\n                     # Features of the first axis\n                     name = (\"Percentage affected\\nby Drought (Yellow)\"),\n                     # Add a second axis and specify its features\n                     sec.axis = sec_axis(~./coeff_flood, \n                                         name=\"Percentage affected\\nby Flood (Blue)\",\n                                         labels = scales::percent_format(scale = 1)))+\n  theme_bw()+\n  xlim(2005, 2023)+\n  theme(plot.title    = element_text(family = \"Luminari\"),\n        plot.subtitle = element_text(family = \"sans\"),\n        axis.title.x  = element_text(family = \"AppleGothic\"),\n        axis.title.y  = element_text(family = \"AppleGothic\"),\n        axis.text.x   = element_text(family = \"Optima\"),\n        axis.text.y   = element_text(family = \"Optima\"))+\nggtitle(\"Economical impact from Natural Disasters\\nin South Sudan\")\n\n```\n\n```{r SS_Combined}\n#| warning: false\n\nclimate_ss\n\ncon <- conflict|>\n  filter(location==\"South Sudan\")\n\n\ncon.seg <- ggplot(con, aes(y=location)) +\n  geom_segment(aes(x=as.Date(start_date), xend=as.Date(ep_end_date), \n                   y=conflict_id,yend=conflict_id, color=intensity_level),\n               size=5, alpha=1)+\n  scale_x_date(date_breaks = \"5 year\", date_labels =\"%Y\",\n               limits = as.Date(c(\"2005-01-01\", \"2023-01-01\"),format=\"%Y\"))+\n  labs(title = \"Number of Natural Disasters\",\n       subtitle = \"in South Sudan\",\n       x = \"Year\",\n       y = \"\\nConflict ID\")+\n  theme(plot.title    = element_text(family = \"Luminari\"),\n        plot.subtitle = element_text(family = \"sans\"),\n        axis.title.x  = element_text(family = \"AppleGothic\"),\n        axis.title.y  = element_text(family = \"AppleGothic\"),\n        axis.text.x   = element_text(family = \"Optima\"),\n        axis.text.y   = element_text(family = \"Optima\"))+\n  theme_bw()+\n  # Legend\n  labs(fill = \"Intensity Level\")+\n  scale_color_manual(labels = c(\"Minor: 25-999\\nbattle-related deaths\", \n                                \"War: 1,000+\\nbattle-related deaths\"),\n                     name=\"Intensity Level\",\n                     values = c(\"slateblue\", \"firebrick2\"))+\n  theme(legend.position = c(0.75, 0.7))\n\ncon.seg\n\nggarrange(climate_ss, con.seg,\n          align = \"v\",\n          heights = c(1.5, 1.5),\n          ncol = 1, nrow = 2)\n\n```\n\n```{r setup4 Cameroon}\n#| echo: false\n#| warning: false\n#| output: false\n\n\n#   Combined Cameroon-----------------------------------------------------------------------\n\n\n#       Assign Cameroon to df ---------------------------------------------------------------\ndf <- cam\n\n# Replace NA with 0\ndf[is.na(df)] <- 0\n\n\n#       Triangles for Drought ---------------------------------------------------\n\n#Create triangle tail with coordinate for Drought\ndf$x_Drought <- df$Year+(as.numeric(df$Drought)/2)\n\nx <- c()\n\nfor (n in 1:nrow(df)){\n  x <- c(x, df$Year[n])\n  x <- c(x, df$Year[n])\n  x <- c(x, df$x_Drought[n])\n}\nx\n\ny <- c()\n\nfor (n in 1:nrow(df)){\n  y <- c(y, 0)\n  y <- c(y, df$Drought[n])\n  y <- c(y, 0)\n}\ny\n\n# Create ID by year\nids <- factor(df$Year)\npositions <- data.frame(\n  Year = rep(ids, each = 3),\n  x,\n  y)\n\ndf2 <- merge(df, positions, by = c(\"Year\"))\n\nplot_drought <- \n  ggplot(df2, aes(x=Year))+\n  ylab(\"Drought\")+\n  ylim(0, 100)+\n  geom_polygon(fill = 'lemonchiffon', alpha = 0.7, \n               aes(group = Year, x=x, y=y))+\n  geom_bar(data=df, stat=\"identity\", fill='yellow',alpha = 0.4, width = 0.3, \n           aes(x=Year, y=Drought))\n\nplot_drought\n\n\n#       Triangles for Flood -----------------------------------------------------\n\ndf$x_Flood <- df$Year+(as.numeric(df$Flood)/2)\n\nx2 <- c()\n\nfor (n in 1:nrow(df)){\n  x2 <- c(x2, df$Year[n])\n  x2 <- c(x2, df$Year[n])\n  x2 <- c(x2, df$x_Flood[n])\n}\nx2\n\ny2 <- c()\n\nfor (n in 1:nrow(df)){\n  y2 <- c(y2, 0)\n  y2 <- c(y2, df$Flood[n])\n  y2 <- c(y2, 0)\n}\ny2\n\n# Create ID by year\nids <- factor(df$Year)\npositions <- data.frame(\n  Year = rep(ids, each = 3),\n  x2,\n  y2)\n\ndf2 <- merge(df2, positions, by = c(\"Year\"))\n\nplot_flood <- ggplot(df2, aes(x=Year))+\n  ylim(0, 100)+\n  ylab(\"Flood\")+\n  geom_polygon(fill = 'orange', alpha = 0.7, \n               aes(group = Year, x=x2, y=y2))+\n  geom_bar(data=df, stat=\"identity\", fill='blue',\n           alpha = 0.4,width = 0.7,\n           aes(x=Year, y=Flood))\n\nplot_flood\n\n\n#       Combined Triangles and Bar ------------------------------------------------------\n\nplot_combined <- \n  ggplot(df2, aes(x=Year))+\n  ylab(\"Combined\")+\n  geom_polygon(fill = 'lemonchiffon', alpha = 0.7, \n               aes(group = Year, x=x, y=y))+\n  geom_bar(data=df, stat=\"identity\", fill='yellow', alpha = 0.4, width = 0.3, \n           aes(x=Year, y=Drought))+\n  geom_polygon(fill = 'orange', alpha = 0.7,\n               aes(group = Year, x=x2, y=y2))+\n  geom_bar(data=df, stat=\"identity\", fill='blue', alpha = 0.4,width = 0.3,\n           aes(x=Year, y=Flood))\n\nplot_combined\n\n\n\n\n\n\n#       Scale flood on second right axis*** ----------------------------------------\n\n# Value used to transform the data\n\ncoeff_flood <- 2\n\n# A few constants\n\nclimate_cam <-\n  ggplot(df2, aes(x=Year))+\n  geom_polygon(fill = 'lemonchiffon', alpha = 0.7, \n               aes(group = Year, x=x, y=y))+\n  geom_bar(data=df, stat=\"identity\", fill='yellow', alpha = 0.4, width = 0.3, \n           aes(x=Year, y=Drought))+\n  geom_polygon(fill = 'lightblue', alpha = 0.7,\n               aes(group = Year, x=x2, y=y2*coeff_flood))+\n  geom_bar(data=df, stat=\"identity\", fill='blue', alpha = 0.4,width = 0.3,\n           aes(x=Year, y=Flood*coeff_flood))+\n  scale_y_continuous(labels = scales::percent_format(scale = 1),\n                     # breaks = c(2,4,6),\n                     # Features of the first axis\n                     name = (\"Percentage affected\\nby Drought (Yellow)\"),\n                     # Add a second axis and specify its features\n                     sec.axis = sec_axis(~./coeff_flood, \n                                         name=\"Percentage affected\\nby Flood (Blue)\",\n                                         labels = scales::percent_format(scale = 1))\n  )+\n  theme_bw()+\n  xlim(1950, 2023)+\n  theme(plot.title    = element_text(family = \"Luminari\"),\n        plot.subtitle = element_text(family = \"sans\"),\n        axis.title.x  = element_text(family = \"AppleGothic\"),\n        axis.title.y  = element_text(family = \"AppleGothic\"),\n        axis.text.x   = element_text(family = \"Optima\"),\n        axis.text.y   = element_text(family = \"Optima\"))+\n  ggtitle(\"Economical impact from Natural Disasters\\nin Cameroon\")\n\n```\n\n```{r Cam_Combined}\n#| warning: false\n\nclimate_cam\n\ncon <- conflict|>\n  filter(location==\"Cameroon\")\n\n\n\ncon.seg <- ggplot(con, aes(y=location)) +\n  geom_segment(aes(x=as.Date(start_date), xend=as.Date(ep_end_date), \n                   y=conflict_id,yend=conflict_id, color=intensity_level),\n               size=5, alpha=1)+\n  scale_x_date(date_breaks = \"10 year\", date_labels =\"%Y\",\n               limits = as.Date(c(\"1950-01-01\", \"2023-01-01\"),format=\"%Y\"))+\n  labs(title = \"Number of Natural Disasters\",\n       subtitle = \"in Cameroon\",\n       x = \"Year\",\n       y = \"\\nConflict ID\")+\n  theme(plot.title    = element_text(family = \"Luminari\"),\n        plot.subtitle = element_text(family = \"sans\"),\n        axis.title.x  = element_text(family = \"AppleGothic\"),\n        axis.title.y  = element_text(family = \"AppleGothic\"),\n        axis.text.x   = element_text(family = \"Optima\"),\n        axis.text.y   = element_text(family = \"Optima\"))+\n  ylab(\"\\n\\nConflict ID\")+ xlab(\"Date\")+\n  theme_bw()+\n  # Legend\n  labs(fill = \"Intensity Level\")+\n  scale_color_manual(labels = c(\"Minor: 25-999\\nbattle-related deaths\", \n                                \"War: 1,000+\\nbattle-related deaths\"),\n                     name=\"Intensity Level\",\n                     values = c(\"slateblue\", \"firebrick2\"))+\n  theme(legend.position = c(0.3, 0.7))\n\ncon.seg\n\nggarrange(climate_cam, con.seg, \n          heights = c(1.5, 1.5),\n          align = \"v\",\n          ncol = 1, nrow = 2)\n\n```\n\n```{r setup5 Algeria}\n#| echo: false\n#| warning: false\n#| output: false\n\n\n# Combined Algeria --------------------------------------------------------\n\n#       Assign Algeria to df ---------------------------------------------------------------\ndf <- al\n\n# Replace NA with 0\ndf[is.na(df)] <- 0\n\n\n#       Triangles for Drought ---------------------------------------------------\n\n#Create triangle tail with coordinate for Drought\ndf$x_Drought <- df$Year+(as.numeric(df$Drought)/2)\n\nx <- c()\n\nfor (n in 1:nrow(df)){\n  x <- c(x, df$Year[n])\n  x <- c(x, df$Year[n])\n  x <- c(x, df$x_Drought[n])\n}\nx\n\ny <- c()\n\nfor (n in 1:nrow(df)){\n  y <- c(y, 0)\n  y <- c(y, df$Drought[n])\n  y <- c(y, 0)\n}\ny\n\n# Create ID by year\nids <- factor(df$Year)\npositions <- data.frame(\n  Year = rep(ids, each = 3),\n  x,\n  y)\n\ndf2 <- merge(df, positions, by = c(\"Year\"))\n\nplot_drought <- \n  ggplot(df2, aes(x=Year))+\n  ylab(\"Drought\")+\n  ylim(0, 100)+\n  geom_polygon(fill = 'lemonchiffon', alpha = 0.7, \n               aes(group = Year, x=x, y=y))+\n  geom_bar(data=df, stat=\"identity\", fill='yellow',alpha = 0.4, width = 0.3, \n           aes(x=Year, y=Drought))\n\nplot_drought\n\n\n#       Triangles for Flood -----------------------------------------------------\n\ndf$x_Flood <- df$Year+(as.numeric(df$Flood)/1.2)\n\nx2 <- c()\n\nfor (n in 1:nrow(df)){\n  x2 <- c(x2, df$Year[n])\n  x2 <- c(x2, df$Year[n])\n  x2 <- c(x2, df$x_Flood[n])\n}\nx2\n\ny2 <- c()\n\nfor (n in 1:nrow(df)){\n  y2 <- c(y2, 0)\n  y2 <- c(y2, df$Flood[n])\n  y2 <- c(y2, 0)\n}\ny2\n\n# Create ID by year\nids <- factor(df$Year)\npositions <- data.frame(\n  Year = rep(ids, each = 3),\n  x2,\n  y2)\n\ndf2 <- merge(df2, positions, by = c(\"Year\"))\n\nplot_flood <- ggplot(df2, aes(x=Year))+\n  xlim(1960, 2021)+\n  ylab(\"Flood\")+\n  geom_polygon(fill = 'lightblue', alpha = 0.7, \n               aes(group = Year, x=x2, y=y2))+\n  geom_bar(data=df, stat=\"identity\", fill='blue',\n           alpha = 0.4,width = 0.7,\n           aes(x=Year, y=Flood))+\n  theme_bw()\n\nplot_flood\n\n\n#       Combined Triangles and Bar ------------------------------------------------------\n\nplot_combined <- \n  ggplot(df2, aes(x=Year))+\n  ylab(\"Combined\")+\n  geom_polygon(fill = 'lemonchiffon', alpha = 0.7, \n               aes(group = Year, x=x, y=y))+\n  geom_bar(data=df, stat=\"identity\", fill='yellow', alpha = 0.4, width = 0.3, \n           aes(x=Year, y=Drought))+\n  geom_polygon(fill = 'orange', alpha = 0.7,\n               aes(group = Year, x=x2, y=y2))+\n  geom_bar(data=df, stat=\"identity\", fill='blue', alpha = 0.4,width = 0.3,\n           aes(x=Year, y=Flood))\n\nplot_combined\n\n\n\n#       Scale flood on second right axis*** ----------------------------------------\n\n# Value used to transform the data\n\ncoeff_flood <- 1.3\n\n# A few constants\n\nclimate_al <-\n  ggplot(df2, aes(x=Year))+\n  geom_polygon(fill = 'lemonchiffon', alpha = 0.7, \n               aes(group = Year, x=x, y=y))+\n  geom_bar(data=df, stat=\"identity\", fill='yellow', alpha = 0.4, width = 0.3, \n           aes(x=Year, y=Drought))+\n  geom_polygon(fill = 'lightblue', alpha = 0.7,\n               aes(group = Year, x=x2, y=y2*coeff_flood))+\n  geom_bar(data=df, stat=\"identity\", fill='blue', alpha = 0.4,width = 0.3,\n           aes(x=Year, y=Flood*coeff_flood))+\n  scale_y_continuous(labels = scales::percent_format(scale = 1),\n                     #breaks = c(0, 0.5,1),\n                     # Features of the first axis\n                     name = (\"Percentage affected\\nby Drought (Yellow)\"),\n                     # Add a second axis and specify its features\n                     sec.axis = sec_axis(~./coeff_flood, \n                                         name=\"Percentage affected\\nby Flood (Blue)\",\n                                         labels = scales::percent_format(scale = 1))\n  )+\n  theme_bw()+\n  xlim(1950, 2023)+\n  theme(plot.title    = element_text(family = \"Luminari\"),\n        plot.subtitle = element_text(family = \"sans\"),\n        axis.title.x  = element_text(family = \"AppleGothic\"),\n        axis.title.y  = element_text(family = \"AppleGothic\"),\n        axis.text.x   = element_text(family = \"Optima\"),\n        axis.text.y   = element_text(family = \"Optima\"))+\n  ggtitle(\"Economical impact from Natural Disasters\\nin Algeria\")\n\n```\n\n```{r Al_Combined}\n#| warning: false\n\nclimate_al\n\ncon <- conflict|>\n  filter(location==\"Algeria\")\n\n\ncon.seg <- ggplot(con, aes(y=location)) +\n  geom_segment(aes(x=as.Date(start_date), xend=as.Date(ep_end_date), \n                   y=conflict_id,yend=conflict_id, color=intensity_level),\n               size=5, alpha=1)+\n  scale_x_date(date_breaks = \"10 year\", date_labels =\"%Y\",\n               limits = as.Date(c(\"1950-01-01\", \"2023-01-01\"),format=\"%Y\"))+\n  labs(title = \"Number of Natural Disasters\",\n       subtitle = \"in Algeria\",\n       x = \"Year\",\n       y = \"\\nConflict ID\")+\n  theme(plot.title    = element_text(family = \"Luminari\"),\n        plot.subtitle = element_text(family = \"sans\"),\n        axis.title.x  = element_text(family = \"AppleGothic\"),\n        axis.title.y  = element_text(family = \"AppleGothic\"),\n        axis.text.x   = element_text(family = \"Optima\"),\n        axis.text.y   = element_text(family = \"Optima\"))+\n  ylab(\"\\nConflict ID\")+ xlab(\"Date\")+\n  theme_bw()+\n  # Legend\n  labs(fill = \"Intensity Level\")+\n  scale_color_manual(labels = c(\"Minor: 25-999\\nbattle-related deaths\", \n                                \"War: 1,000+\\nbattle-related deaths\"),\n                     name=\"Intensity Level\",\n                     values = c(\"slateblue\", \"firebrick2\"))+\n  theme(legend.position = c(0.15, 0.7))\n\ncon.seg\n\nggarrange(climate_al, con.seg, \n          heights = c(1.5, 1.5),\n          align = \"v\",\n          ncol = 1, nrow = 2)\n```\n\n```{r setup6 Ethiopia}\n#| echo: false\n#| warning: false\n#| output: false\n\n\n# Combined Ethiopia -------------------------------------------------------\n#       Assign Ethiopia to df ---------------------------------------------------------------\ndf <- eth\n\n# Replace NA with 0\ndf[is.na(df)] <- 0\n\n\n#       Triangles for Drought ---------------------------------------------------\n\n#Create triangle tail with coordinate for Drought\ndf$x_Drought <- df$Year+(as.numeric(df$Drought)/10)\n\nx <- c()\n\nfor (n in 1:nrow(df)){\n  x <- c(x, df$Year[n])\n  x <- c(x, df$Year[n])\n  x <- c(x, df$x_Drought[n])\n}\nx\n\ny <- c()\n\nfor (n in 1:nrow(df)){\n  y <- c(y, 0)\n  y <- c(y, df$Drought[n])\n  y <- c(y, 0)\n}\ny\n\n# Create ID by year\nids <- factor(df$Year)\npositions <- data.frame(\n  Year = rep(ids, each = 3),\n  x,\n  y)\n\ndf2 <- merge(df, positions, by = c(\"Year\"))\n\nplot_drought <- \n  ggplot(df2, aes(x=Year))+\n  ylab(\"Drought\")+\n  ylim(0, 100)+\n  geom_polygon(fill = 'lemonchiffon', alpha = 0.7, \n               aes(group = Year, x=x, y=y))+\n  geom_bar(data=df, stat=\"identity\", fill='yellow',alpha = 0.4, width = 0.3, \n           aes(x=Year, y=Drought))\n\nplot_drought\n\n\n#       Triangles for Flood -----------------------------------------------------\n\ndf$x_Flood <- df$Year+(as.numeric(df$Flood)/2)\n\nx2 <- c()\n\nfor (n in 1:nrow(df)){\n  x2 <- c(x2, df$Year[n])\n  x2 <- c(x2, df$Year[n])\n  x2 <- c(x2, df$x_Flood[n])\n}\nx2\n\ny2 <- c()\n\nfor (n in 1:nrow(df)){\n  y2 <- c(y2, 0)\n  y2 <- c(y2, df$Flood[n])\n  y2 <- c(y2, 0)\n}\ny2\n\n# Create ID by year\nids <- factor(df$Year)\npositions <- data.frame(\n  Year = rep(ids, each = 3),\n  x2,\n  y2)\n\ndf2 <- merge(df2, positions, by = c(\"Year\"))\n\nplot_flood <- ggplot(df2, aes(x=Year))+\n  xlim(1960, 2021)+\n  ylab(\"Flood\")+\n  geom_polygon(fill = 'orange', alpha = 0.7, \n               aes(group = Year, x=x2, y=y2))+\n  geom_bar(data=df, stat=\"identity\", fill='blue',\n           alpha = 0.4,width = 0.7,\n           aes(x=Year, y=Flood))+\n  theme_bw()\n\nplot_flood\n\n\n#       Combined Triangles and Bar ------------------------------------------------------\n\nplot_combined <- \n  ggplot(df2, aes(x=Year))+\n  ylab(\"Combined\")+\n  geom_polygon(fill = 'lemonchiffon', alpha = 0.7, \n               aes(group = Year, x=x, y=y))+\n  geom_bar(data=df, stat=\"identity\", fill='yellow', alpha = 0.4, width = 0.3, \n           aes(x=Year, y=Drought))+\n  geom_polygon(fill = 'orange', alpha = 0.7,\n               aes(group = Year, x=x2, y=y2))+\n  geom_bar(data=df, stat=\"identity\", fill='blue', alpha = 0.4,width = 0.3,\n           aes(x=Year, y=Flood))\n\nplot_combined\n\n\n\n\n\n\n#       Scale flood on second right axis*** ----------------------------------------\n\n# Value used to transform the data\n\ncoeff_flood <- 15\n\n# A few constants\n\nclimate_eth <-\n  ggplot(df2, aes(x=Year))+\n  geom_polygon(fill = 'lemonchiffon', alpha = 0.7, \n               aes(group = Year, x=x, y=y))+\n  geom_bar(data=df, stat=\"identity\", fill='yellow', alpha = 0.4, width = 0.3, \n           aes(x=Year, y=Drought))+\n  geom_polygon(fill = 'lightblue', alpha = 0.7,\n               aes(group = Year, x=x2, y=y2*coeff_flood))+\n  geom_bar(data=df, stat=\"identity\", fill='blue', alpha = 0.4,width = 0.3,\n           aes(x=Year, y=Flood*coeff_flood))+\n  scale_y_continuous(labels = scales::percent_format(scale = 1),\n                     #breaks = c(0, 0.5,1),\n                     # Features of the first axis\n                     name = (\"Percentage affected\\nby Drought (Yellow)\"),\n                     # Add a second axis and specify its features\n                     sec.axis = sec_axis(~./coeff_flood, \n                                         name=\"Percentage affected\\nby Flood (Blue)\",\n                                         labels = scales::percent_format(scale = 1))\n  )+\n  theme_bw()+\n  xlim(1950, 2023)+\n  theme(plot.title    = element_text(family = \"Luminari\"),\n        plot.subtitle = element_text(family = \"sans\"),\n        axis.title.x  = element_text(family = \"AppleGothic\"),\n        axis.title.y  = element_text(family = \"AppleGothic\"),\n        axis.text.x   = element_text(family = \"Optima\"),\n        axis.text.y   = element_text(family = \"Optima\"))+\n  ggtitle(\"Economical impact from Natural Disasters\\nin Ethiopia\")\n\n\n```\n\n```{r Eth_Combined}\n#| warning: false\n\nclimate_eth\n\ncon <- conflict|>\n  filter(location==\"Ethiopia\")\n\ncon.seg <- ggplot(con, aes(y=location)) +\n  geom_segment(aes(x=as.Date(start_date), xend=as.Date(ep_end_date), \n                   y=conflict_id,yend=conflict_id, color=intensity_level),\n               size=5, alpha=1)+\n  scale_x_date(date_breaks = \"10 year\", date_labels =\"%Y\",\n               limits = as.Date(c(\"1950-01-01\", \"2023-01-01\"),format=\"%Y\"))+\n  labs(title = \"Number of Natural Disasters\",\n       subtitle = \"in Ethiopiaia\",\n       x = \"Year\",\n       y = \"\\nConflict ID\")+\n  theme(plot.title    = element_text(family = \"Luminari\"),\n        plot.subtitle = element_text(family = \"sans\"),\n        axis.title.x  = element_text(family = \"AppleGothic\"),\n        axis.title.y  = element_text(family = \"AppleGothic\"),\n        axis.text.x   = element_text(family = \"Optima\"),\n        axis.text.y   = element_text(family = \"Optima\"))+\n  ylab(\"\\nConflict ID\")+ xlab(\"Date\")+\n  theme_bw()+\n  # Legend\n  labs(fill = \"Intensity Level\")+\n  scale_color_manual(labels = c(\"Minor: 25-999\\nbattle-related deaths\", \n                                \"War: 1,000+\\nbattle-related deaths\"),\n                     name=\"Intensity Level\",\n                     values = c(\"slateblue\", \"firebrick2\"))+\n  theme(legend.position = c(0.99, 0.99))\n\n\ncon.seg\n\nggarrange(climate_eth, con.seg, \n          heights = c(1.5, 1.5),\n          align = \"v\",\n          ncol = 1, nrow = 2)\n\n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.1.189","editor":"visual","theme":"lux","title-block-banner":true,"title":"EPPS 6356 Final Project","author":"By Prattasha, Bel, Kaitlyn, and Leonardo","date":"2022-12-06","categories":["R","Code","Blog","Project"],"image":"image.png","code-copy":true},"extensions":{"book":{"multiFile":true}}}}}
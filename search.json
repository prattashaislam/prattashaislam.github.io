[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Currently, MS in Economics Student at the University of Texas at Dallas, TX, USA. Looking forward to becoming a successful development practitioner in the future."
  },
  {
    "objectID": "Assignment01.html",
    "href": "Assignment01.html",
    "title": "Assignments",
    "section": "",
    "text": "Part 1\nGenerative art is a form of art which is created using an autonomous system and algorithm through computer generated artwork. The art can be found in various forms like computer visuals, music and literature.\nGenerative Art Examples:\nCatherine Bruner Website - Catherine Bruner, a data scientist, shows how a simple generative art is created step by step. She also has a tutorial site for generative arts using R. Her codes can also be found on her github page. The arts displayed below are all abstract.\nCatherine Bruner’s tutorial using R\n\n\nMark Stock’s Website - Another generative artist, described how he created his series “FIELD” in his website. Artworks in this series were made using a algorithmic process and a very specific set of instructions. He describes the below piece as his reflection on the hierarchy of currents and eddies in the ocean and their little understood effect on climate change.\n\n\nKate Compton’s Flowers - This is just another simple and interactive piece of generative art, that is really cool to look at!\nPart 2\n\n\n\nFall.R plot in powderblue color\n\n\nPart 3\nCritique on a Chart from BBC article:\n\nBBC article link\nJust at the first glance, the chart above looks impressive as it has a colorful set of pattern for which the chart overall looks different than a regular line or bar chart. The color selection for the continents are very much appropriate as they are easy to distinguish from each other. By looking at the trend, it can be said that the relationship between the rates of population growth and climate change vulnerability is strong.\nHowever, without the disclaimer, “Circle size represents current population” beside the source of the chart, it would be difficult to interpret the different sizes of the circles. It is also difficult to understand that the different circles represent different cities of their respective continents without actually reading the article. Most of the data points are extremely cluttered and overlapped within each other, hence it looks complex to interpret.\nLooking at the original article from the source of the chart, it becomes easy to figure out some room for improvements. The chart could be improved by including more divisions in the climate change vulnerability index (x -axis) to show a less cluttered pattern. For instance, dividing the climate change vulnerability into groups like low risk, medium risk, high risk etc. It could also contain a size guide or comparison for the circles. The population growth could account for negative growths as well."
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "Assignments",
    "section": "",
    "text": "R\n\n\nCode\n\n\nVisuals\n\n\nAssignments\n\n\n\n\n\n\n\n\n\n\n\nSep 20, 2022\n\n\nPrattasha Nawar Islam\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nR\n\n\nCode\n\n\nVisuals\n\n\nAssignments\n\n\n\n\n\n\n\n\n\n\n\nSep 14, 2022\n\n\nPrattasha Nawar Islam\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nR\n\n\nCode\n\n\nVisuals\n\n\nAssignments\n\n\n\n\n\n\n\n\n\n\n\nSep 13, 2022\n\n\nPrattasha Nawar Islam\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nSep 12, 2022\n\n\nPrattasha Nawar Islam\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSep 12, 2022\n\n\nPrattasha Nawar Islam\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Prattasha Nawar Islam",
    "section": "",
    "text": "This is my first official website. I know it looks boring. But hey, I am still learning!"
  },
  {
    "objectID": "posts/Assignment 01/index.html",
    "href": "posts/Assignment 01/index.html",
    "title": "Assignment 01",
    "section": "",
    "text": "Part 1\nGenerative art is a form of art which is created using an autonomous system and algorithm through computer generated artwork. The art can be found in various forms like computer visuals, music and literature.\nGenerative Art Examples:\n\nCatherine Bruner Website - Catherine Bruner, a data scientist, shows how a simple generative art is created step by step. She also has a tutorial site for generative arts using R. Her codes can also be found on her github page. The arts displayed below are all abstract.\nCatherine Bruner’s tutorial using R\n\nMark Stock’s Website - Another generative artist, described how he created his series “FIELD” in his website. Artworks in this series were made using a algorithmic process and a very specific set of instructions. He describes the below piece as his reflection on the hierarchy of currents and eddies in the ocean and their little understood effect on climate change.\n\n\nKate Compton’s Flowers - This is just another simple and interactive piece of generative art, that is really cool to look at!\nPart 2\n\n\n\nFall.R plot in powderblue color\n\n\nPart 3\nCritique on a Chart from BBC article:\n\nBBC article link\nJust at the first glance, the chart above looks impressive as it has a colorful set of pattern for which the chart overall looks different than a regular line or bar chart. The color selection for the continents are very much appropriate as they are easy to distinguish from each other. By looking at the trend, it can be said that the relationship between the rates of population growth and climate change vulnerability is strong.\nHowever, without the disclaimer, “Circle size represents current population” beside the source of the chart, it would be difficult to interpret the different sizes of the circles. It is also difficult to understand that the different circles represent different cities of their respective continents without actually reading the article. Most of the data points are extremely cluttered and overlapped within each other, hence it looks complex to interpret.\nLooking at the original article from the source of the chart, it becomes easy to figure out some room for improvements. The chart could be improved by including more divisions in the climate change vulnerability index (x -axis) to show a less cluttered pattern. For instance, dividing the climate change vulnerability into groups like low risk, medium risk, high risk etc. It could also contain a size guide or comparison for the circles. The population growth could account for negative growths as well."
  },
  {
    "objectID": "posts/Assignment 02/index.html",
    "href": "posts/Assignment 02/index.html",
    "title": "Assignment 02",
    "section": "",
    "text": "Paul Murrell’s R plotting examples:\nBasic chart\nHere, changing pch value changes the symbol of the points.\n\n\nCode\nplot(pressure, pch=16)  # Can you change pch?\ntext(150, 600, \n     \"Pressure (mm Hg)\\nversus\\nTemperature (Celsius)\")\n\n\n\n\n\nScatterplot\nChanging the cex value changes the size of the points.\nIn the axis code, the first number stands for the side of the plot where the axis is to be drawn.\n\n\nCode\n# Setting the parameter (3 rows by 2 cols)\npar(mfrow=c(3, 2))\n\n# Scatterplot\n# Note the incremental additions\n\nx <- c(0.5, 2, 4, 8, 12, 16)\ny1 <- c(1, 1.3, 1.9, 3.4, 3.9, 4.8)\ny2 <- c(4, .8, .5, .45, .4, .3)\n\n# Setting label orientation, margins c(bottom, left, top, right) & text size\npar(las=1, mar=c(4, 4, 2, 4), cex=.7) \nplot.new()\nplot.window(range(x), c(0, 6))\nlines(x, y1)\nlines(x, y2)\npoints(x, y1, pch=16, cex=2) # Try different cex value?  \npoints(x, y2, pch=21, bg=\"white\", cex=2)  # Different background color\npar(col=\"gray50\", fg=\"gray50\", col.axis=\"gray50\")\naxis(1, at=seq(0, 16, 4)) # What is the first number standing for?\naxis(2, at=seq(0, 6, 2))\naxis(4, at=seq(0, 6, 2))\nbox(bty=\"u\")\nmtext(\"Travel Time (s)\", side=1, line=2, cex=0.8)\nmtext(\"Responses per Travel\", side=2, line=2, las=0, cex=0.8)\nmtext(\"Responses per Second\", side=4, line=2, las=0, cex=0.8)\ntext(4, 5, \"Bird 131\")\npar(mar=c(5.1, 4.1, 4.1, 2.1), col=\"black\", fg=\"black\", col.axis=\"black\")\n\n\n\n\n\nHistogram\n\n\nCode\n# Histogram\n# Random data\nY <- rnorm(50)\n# Make sure no Y exceed [-3.5, 3.5]\nY[Y < -3.5 | Y > 3.5] <- NA # Selection/set range\nx <- seq(-3.5, 3.5, .1)\ndn <- dnorm(x)\npar(mar=c(4.5, 4.1, 3.1, 0))\nhist(Y, breaks=seq(-3.5, 3.5), ylim=c(0, 0.5), \n     col=\"gray80\", freq=FALSE)\nlines(x, dnorm(x), lwd=2)\n\n\n\n\n\nCode\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\n\nBarplot\n\n\nCode\n# Barplot\npar(mar=c(2, 3.1, 2, 2.1)) \nmidpts <- barplot(VADeaths, \n                  col=gray(0.1 + seq(1, 9, 2)/11), \n                  names=rep(\"\", 4))\nmtext(sub(\" \", \"\\n\", colnames(VADeaths)),\n      at=midpts, side=1, line=0.5, cex=0.5)\ntext(rep(midpts, each=5), apply(VADeaths, 2, cumsum) - VADeaths/2,\n     VADeaths, \n     col=rep(c(\"white\", \"black\"), times=3:2), \n     cex=0.8)\n\n\n\n\n\nCode\npar(mar=c(5.1, 4.1, 4.1, 2.1))  \n\n\nBoxplot\n\n\nCode\n# Boxplot\npar(mar=c(3, 4.1, 2, 0))\nboxplot(len ~ dose, data = ToothGrowth,\n        boxwex = 0.25, at = 1:3 - 0.2,\n        subset= supp == \"VC\", col=\"white\",\n        xlab=\"\",\n        ylab=\"tooth length\", ylim=c(0,35))\nmtext(\"Vitamin C dose (mg)\", side=1, line=2.5, cex=0.8)\nboxplot(len ~ dose, data = ToothGrowth, add = TRUE,\n        boxwex = 0.25, at = 1:3 + 0.2,\n        \n        subset= supp == \"OJ\")\nlegend(1.5, 9, c(\"Ascorbic acid\", \"Orange juice\"), \n       fill = c(\"white\", \"gray\"), \n       bty=\"n\")\n\n\n\n\n\nCode\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\n\nPersp\n\n\nCode\n# Persp\nx <- seq(-10, 10, length= 30)\ny <- x\nf <- function(x,y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }\nz <- outer(x, y, f)\nz[is.na(z)] <- 1\n# 0.5 to include z axis label\npar(mar=c(0, 0.5, 0, 0), lwd=0.5)\npersp(x, y, z, theta = 30, phi = 30, \n      expand = 0.5)\n\n\n\n\n\nCode\npar(mar=c(5.1, 4.1, 4.1, 2.1), lwd=1)\n\n\nPiechart\n\n\nCode\n# Piechart\npar(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)\npie.sales <- c(0.12, 0.3, 0.26, 0.16, 0.04, 0.12)\nnames(pie.sales) <- c(\"Blueberry\", \"Cherry\",\n                      \"Apple\", \"Boston Cream\", \"Other\", \"Vanilla\")\npie(pie.sales, col = gray(seq(0.3,1.0,length=6))) \n\n\n\n\n\nHistogram using HPI Data set:\n\n\nCode\nYears <- c(2006,2007,2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020)\n\nHPIUSA <- c(34.3, 35.9, 36.4, 37.9, 37.2, 38.1, 38.6, 39, 38.6, 37.7, 37.2, 38.3, 37.4, 37.4, 39.7)\n\nLEUSA <- c(77.9, 78.1, 78.3, 78.5, 78.7, 78.8, 78.9, 78.9, 78.9, 78.9, 78.9, 78.9, 78.9, 78.9, 77.4)\n\npar(mfrow=c(1, 2))\nhist(HPIUSA, main=\"HPI in USA\", col=\"green\")\nhist(LEUSA, main=\"Life Expectancy in USA\", col=\"red\")"
  },
  {
    "objectID": "posts/Assignment 03/index.html",
    "href": "posts/Assignment 03/index.html",
    "title": "Assignment 03",
    "section": "",
    "text": "Code\n## Anscombe (1973) Quartlet\n\ndata(anscombe)  # Load Anscombe's data\nView(anscombe) # View the data\nsummary(anscombe)\n\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n\nCode\n## Simple version\nplot(anscombe$x1,anscombe$y1)\n\n\n\n\n\nANSCOMBE Regression Models Comparison:\nAll four regression models below shows a p-value of 0.00217, which is less than the commonly used significance level of 0.05. This shows that all of these models are statistically significant. All the models have the same value of 3.00 for their intercept coefficient and the same value of 0.5 for the coefficients of x1, x2, x3, and x4. The models have the same standard errors for the variables, same t-stat values and same adjusted R squared values. A multiple R squared value of 0.66 indicates that there is a fairly strong relationship between the independent and dependent variables. All the other values from the models are also the same on average which shows that the variables have the same relationship between them.\n\n\nCode\n# Create four model objects\nlm1 <- lm(y1 ~ x1, data=anscombe)\nsummary(lm1)\n\n\n\nCall:\nlm(formula = y1 ~ x1, data = anscombe)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.92127 -0.45577 -0.04136  0.70941  1.83882 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept)   3.0001     1.1247   2.667  0.02573 * \nx1            0.5001     0.1179   4.241  0.00217 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6665,    Adjusted R-squared:  0.6295 \nF-statistic: 17.99 on 1 and 9 DF,  p-value: 0.00217\n\n\nCode\nlm2 <- lm(y2 ~ x2, data=anscombe)\nsummary(lm2)\n\n\n\nCall:\nlm(formula = y2 ~ x2, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.9009 -0.7609  0.1291  0.9491  1.2691 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept)    3.001      1.125   2.667  0.02576 * \nx2             0.500      0.118   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6662,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002179\n\n\nCode\nlm3 <- lm(y3 ~ x3, data=anscombe)\nsummary(lm3)\n\n\n\nCall:\nlm(formula = y3 ~ x3, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.1586 -0.6146 -0.2303  0.1540  3.2411 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept)   3.0025     1.1245   2.670  0.02562 * \nx3            0.4997     0.1179   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6663,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002176\n\n\nCode\nlm4 <- lm(y4 ~ x4, data=anscombe)\nsummary(lm4)\n\n\n\nCall:\nlm(formula = y4 ~ x4, data = anscombe)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-1.751 -0.831  0.000  0.809  1.839 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept)   3.0017     1.1239   2.671  0.02559 * \nx4            0.4999     0.1178   4.243  0.00216 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6667,    Adjusted R-squared:  0.6297 \nF-statistic:    18 on 1 and 9 DF,  p-value: 0.002165\n\n\nCode\nplot(anscombe$x1,anscombe$y1)\nabline(coefficients(lm1))\n\n\n\n\n\nCode\nplot(anscombe$x2,anscombe$y2)\nabline(coefficients(lm2))\n\n\n\n\n\nCode\nplot(anscombe$x3,anscombe$y3)\nabline(coefficients(lm3))\n\n\n\n\n\nCode\nplot(anscombe$x4,anscombe$y4)\nabline(coefficients(lm4))\n\n\n\n\n\n\n\nCode\n## Fancy version (per help file)\n\nff <- y ~ x\nmods <- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n\n# Plot using for loop\nfor(i in 1:4) {\n  ff[2:3] <- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  ## or   ff[[2]] <- as.name(paste0(\"y\", i))\n  ##      ff[[3]] <- as.name(paste0(\"x\", i))\n  mods[[i]] <- lmi <- lm(ff, data = anscombe)\n  print(anova(lmi))\n}\n\n\nAnalysis of Variance Table\n\nResponse: y1\n          Df Sum Sq Mean Sq F value  Pr(>F)   \nx1         1 27.510 27.5100   17.99 0.00217 **\nResiduals  9 13.763  1.5292                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y2\n          Df Sum Sq Mean Sq F value   Pr(>F)   \nx2         1 27.500 27.5000  17.966 0.002179 **\nResiduals  9 13.776  1.5307                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y3\n          Df Sum Sq Mean Sq F value   Pr(>F)   \nx3         1 27.470 27.4700  17.972 0.002176 **\nResiduals  9 13.756  1.5285                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y4\n          Df Sum Sq Mean Sq F value   Pr(>F)   \nx4         1 27.490 27.4900  18.003 0.002165 **\nResiduals  9 13.742  1.5269                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode\nsapply(mods, coef)  # Note the use of this function\n\n\n                  lm1      lm2       lm3       lm4\n(Intercept) 3.0000909 3.000909 3.0024545 3.0017273\nx1          0.5000909 0.500000 0.4997273 0.4999091\n\n\nCode\nlapply(mods, function(fm) coef(summary(fm)))\n\n\n$lm1\n             Estimate Std. Error  t value    Pr(>|t|)\n(Intercept) 3.0000909  1.1247468 2.667348 0.025734051\nx1          0.5000909  0.1179055 4.241455 0.002169629\n\n$lm2\n            Estimate Std. Error  t value    Pr(>|t|)\n(Intercept) 3.000909  1.1253024 2.666758 0.025758941\nx2          0.500000  0.1179637 4.238590 0.002178816\n\n$lm3\n             Estimate Std. Error  t value    Pr(>|t|)\n(Intercept) 3.0024545  1.1244812 2.670080 0.025619109\nx3          0.4997273  0.1178777 4.239372 0.002176305\n\n$lm4\n             Estimate Std. Error  t value    Pr(>|t|)\n(Intercept) 3.0017273  1.1239211 2.670763 0.025590425\nx4          0.4999091  0.1178189 4.243028 0.002164602\n\n\nCode\n# Preparing for the plots\nop <- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n\n# Plot charts using for loop\nfor(i in 1:4) {\n  ff[2:3] <- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, col = \"red\", pch = 21, bg = \"orange\", cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"blue\")\n}\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n\n\n\n\n\nCode\npar(op)\n\n\nFine-tuning and modifying the charts:\nBelow code shows how the par function is used to modify the regression model plots. The mfrow argument in the par function is used to draw multiple graphs in the same window. And the bg argument is used to input a background color to the window.\n\n\nCode\npar(mfrow = c(2, 2))\npar(bg = \"powderblue\")\nplot(anscombe$x1,anscombe$y1)\nabline(coefficients(lm1))\nplot(anscombe$x2,anscombe$y2)\nabline(coefficients(lm2))\nplot(anscombe$x3,anscombe$y3)\nabline(coefficients(lm3))\nplot(anscombe$x4,anscombe$y4)\nabline(coefficients(lm4))\n\n\n\n\n\nPlotting multiple lines to one graph.\nThe graph below looks messy but this is just to show how to plot multiple relationships in the same graph (how x1 in the anscombe dataset varies with y1, y2, y3, y4). Specifying the type=“b” assigns a specific point symbol to each line and modifying the pch argument shows different signs for those symbols for each line. The size of the symbols depend on the cex value. Different colors are assigned to different lines using the col argument. The lwd argument specifies the thickness of the line.\n\n\nCode\nplot(anscombe$x1, anscombe$y1, type = \"b\", pch = 16, cex = 0.5, lwd = 4)                      \nlines(anscombe$x1, anscombe$y2, type = \"b\", pch = 15, cex = 0.5, col = \"red\", lwd = 4)               \nlines(anscombe$x1, anscombe$y3, type = \"b\", pch = 10, cex = 0.5,  col = \"blue\", lwd = 4) \nlines(anscombe$x1, anscombe$y4, type = \"b\", pch = 8, cex = 0.5, col = \"orange\", lwd = 4)\n\nlegend(\"topleft\",\n       legend = c(\"Line y1\", \"Line y2\", \"Line y3\", \"Line y4\"),\n       col = c(\"black\", \"red\", \"blue\", \"orange\"),\n       pch = c(16, 15, 10, 8))\n\n\n\n\n\nUsing ggplot2 package to plot:\nWith the ggplot2 package, (under tidyverse), graphs can be created much easily with single line commands. The graph below simply shows the relationship between x1 and y1 with a line using geom_line and the points using geom_point.\n\n\nCode\nlibrary(\"tidyverse\")\n\n\nWarning: package 'tidyverse' was built under R version 4.1.3\n\n\n-- Attaching packages --------------------------------------- tidyverse 1.3.2 --\n\n\nv ggplot2 3.3.6     v purrr   0.3.4\nv tibble  3.1.6     v dplyr   1.0.7\nv tidyr   1.1.4     v stringr 1.4.0\nv readr   2.1.1     v forcats 0.5.1\n\n\nWarning: package 'ggplot2' was built under R version 4.1.3\n\n\n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\n\n\nCode\nggplot(anscombe, aes(x = x1, y = y1)) +\n  geom_point() +\n  geom_line()\n\n\n\n\n\nPlotting regression models using ggplot2 package.\nThe regression models in the anscombe dataset, which were done previously, is now plotted below using the ggplot2 package. Here, specifying the method as lm in the geom_smooth argument displays the regression line. The se=TRUE argument displays the standard error lines. Keeping it at FALSE would simply hide it.\n\n\nCode\nggplot(anscombe,aes(x1, y1)) +\n  geom_point() +\n  geom_smooth(method='lm', se=TRUE) \n\n\n`geom_smooth()` using formula 'y ~ x'\n\n\n\n\n\nCode\nggplot(anscombe,aes(x2, y2)) +\n  geom_point() +\n  geom_smooth(method='lm', se=TRUE) \n\n\n`geom_smooth()` using formula 'y ~ x'\n\n\n\n\n\nCode\nggplot(anscombe,aes(x3, y3)) +\n  geom_point() +\n  geom_smooth(method='lm', se=TRUE) \n\n\n`geom_smooth()` using formula 'y ~ x'\n\n\n\n\n\nCode\nggplot(anscombe,aes(x4, y4)) +\n  geom_point() +\n  geom_smooth(method='lm', se=TRUE) \n\n\n`geom_smooth()` using formula 'y ~ x'"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!"
  }
]